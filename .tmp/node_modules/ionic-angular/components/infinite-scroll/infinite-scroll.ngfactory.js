/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
import * as import0 from 'ionic-angular/components/infinite-scroll/infinite-scroll';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
export var Wrapper_InfiniteScroll = (function () {
    function Wrapper_InfiniteScroll(p0, p1, p2) {
        this.changed = false;
        this._threshold = import1.UNINITIALIZED;
        this._enabled = import1.UNINITIALIZED;
        this.context = new import0.InfiniteScroll(p0, p1, p2);
    }
    Wrapper_InfiniteScroll.prototype.check_threshold = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._threshold, currValue))) {
            this.changed = true;
            this.context.threshold = currValue;
            this._threshold = currValue;
        }
    };
    Wrapper_InfiniteScroll.prototype.check_enabled = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._enabled, currValue))) {
            this.changed = true;
            this.context.enabled = currValue;
            this._enabled = currValue;
        }
    };
    Wrapper_InfiniteScroll.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_InfiniteScroll;
}());
//# sourceMappingURL=infinite-scroll.ngfactory.js.map