"use strict";var buffer=require("buffer"),Buffer=buffer.Buffer,SlowBuffer=buffer.SlowBuffer,MAX_LEN=buffer.kMaxLength||2147483647;exports.alloc=function(t,e,n){if("function"==typeof Buffer.alloc)return Buffer.alloc(t,e,n);if("number"==typeof n)throw new TypeError("encoding must not be number");if("number"!=typeof t)throw new TypeError("size must be a number");if(t>MAX_LEN)throw new RangeError("size is too large");var r=n,i=e;void 0===i&&(r=void 0,i=0);var o=new Buffer(t);if("string"==typeof i)for(var s=new Buffer(i,r),a=s.length,c=-1;++c<t;)o[c]=s[c%a];else o.fill(i);return o},exports.allocUnsafe=function(t){if("function"==typeof Buffer.allocUnsafe)return Buffer.allocUnsafe(t);if("number"!=typeof t)throw new TypeError("size must be a number");if(t>MAX_LEN)throw new RangeError("size is too large");return new Buffer(t)},exports.from=function(t,e,n){if("function"==typeof Buffer.from&&(!global.Uint8Array||Uint8Array.from!==Buffer.from))return Buffer.from(t,e,n);if("number"==typeof t)throw new TypeError('"value" argument must not be a number');if("string"==typeof t)return new Buffer(t,e);if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer){var r=e;if(1===arguments.length)return new Buffer(t);"undefined"==typeof r&&(r=0);var i=n;if("undefined"==typeof i&&(i=t.byteLength-r),r>=t.byteLength)throw new RangeError("'offset' is out of bounds");if(i>t.byteLength-r)throw new RangeError("'length' is out of bounds");return new Buffer(t.slice(r,r+i))}if(Buffer.isBuffer(t)){var o=new Buffer(t.length);return t.copy(o,0,0,t.length),o}if(t){if(Array.isArray(t)||"undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return new Buffer(t);if("Buffer"===t.type&&Array.isArray(t.data))return new Buffer(t.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")},exports.allocUnsafeSlow=function(t){if("function"==typeof Buffer.allocUnsafeSlow)return Buffer.allocUnsafeSlow(t);if("number"!=typeof t)throw new TypeError("size must be a number");if(t>=MAX_LEN)throw new RangeError("size is too large");return new SlowBuffer(t)};