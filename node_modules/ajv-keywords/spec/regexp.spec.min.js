"use strict";var Ajv=require("ajv"),ajvPack=require("ajv-pack"),defFunc=require("../keywords/regexp"),defineKeywords=require(".."),should=require("chai").should();describe('keyword "regexp"',function(){var e=[new Ajv,new Ajv({allErrors:!0}),new Ajv,ajvPack.instance(new Ajv({sourceCode:!0}))];defFunc(e[0]),defineKeywords(e[1],"regexp"),defineKeywords(e[2]),defFunc(e[3]),e.forEach(function(e,t){it("should validate that values match regular expressions with flags #"+t,function(){var t={type:"object",properties:{foo:{regexp:"/foo/i"},bar:{regexp:{pattern:"bar",flags:"i"}}}},r={foo:"Food",bar:"Barmen"},n={foo:"fog",bar:"bad"};e.validate(t,{}).should.equal(!0),e.validate(t,r).should.equal(!0),e.validate(t,n).should.equal(!1)})}),e.forEach(function(e,t){it("should throw when regexp schema is invalid #"+t,function(){[{regexp:"/foo"},{regexp:"/foo/a"},{regexp:{pattern:"[a-z"}},{regexp:{pattern:"[a-z]",flags:"a"}},{regexp:{flag:"i"}},{regexp:{pattern:"[a-z]",flag:"i",foo:1}},{regexp:1},{regexp:{pattern:1,flags:"i"}}].forEach(function(t){should["throw"](function(){e.compile(t)})})})})});