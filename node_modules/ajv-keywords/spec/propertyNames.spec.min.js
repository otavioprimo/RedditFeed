"use strict";var Ajv=require("ajv"),defFunc=require("../keywords/propertyNames"),defineKeywords=require(".."),should=require("chai").should();describe('keyword "propertyNames"',function(){var e=[new Ajv,new Ajv({allErrors:!0}),new Ajv({v5:!0})];defFunc(e[0]),defineKeywords(e[1],"propertyNames"),defineKeywords(e[2]),e.forEach(function(e,t){it("should validate that all property names are valid #"+t,function(){var t={type:"object",propertyNames:{format:"email"}},r={"foo@example.com":{},"bar.baz@email.example.com":{}},n={foo:{}};e.validate(t,{}).should.equal(!0),e.validate(t,r).should.equal(!0),e.validate(t,n).should.equal(!1)})}),e.forEach(function(e,t){it("should throw when propertyNames schema is invalid #"+t,function(){[{propertyNames:{type:1}},{propertyNames:[]},{propertyNames:1},{propertyNames:"foo"}].forEach(function(t){should["throw"](function(){e.compile(t)})})})}),it("should short circuit without allErrors option",function(){var t=e[0],r={type:"object",propertyNames:{format:"email"}},n={foo:{},bar:{}};t.validate(r,n).should.equal(!1),t.errors.should.have.length(2)}),it("should collect all errors with {allErrors: true} option",function(){var t=e[1],r={type:"object",propertyNames:{format:"email"}},n={foo:{},bar:{}};t.validate(r,n).should.equal(!1),t.errors.should.have.length(4)}),it("should allow v5 schemas with v5 option",function(){var t=e[2],r={type:"object",propertyNames:{constant:"foo"}},n={foo:{}},i={foo:{},bar:{}};t.validate(r,{}).should.equal(!0),t.validate(r,n).should.equal(!0),t.validate(r,i).should.equal(!1)})});