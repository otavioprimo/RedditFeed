function ConcordModulesPlugin(e,t,r){this.source=e,this.options=t,this.target=r}var assign=require("object-assign"),concord=require("./concord"),DescriptionFileUtils=require("./DescriptionFileUtils"),createInnerCallback=require("./createInnerCallback"),getInnerRequest=require("./getInnerRequest");module.exports=ConcordModulesPlugin,ConcordModulesPlugin.prototype.apply=function(e){var t=this.target;this.options;e.plugin(this.source,function(r,n){var i=getInnerRequest(e,r);if(!i)return n();var a=DescriptionFileUtils.getField(r.descriptionFileData,"concord");if(!a)return n();var o=concord.matchModule(r.context,a,i);if(o===i)return n();if(void 0===o)return n();if(o===!1){var s=assign({},r,{path:!1});return n(null,s)}var u=assign({},r,{path:r.descriptionFileRoot,request:o});e.doResolve(t,u,"aliased from description file "+r.descriptionFilePath+" with mapping '"+i+"' to '"+o+"'",createInnerCallback(function(e,t){return arguments.length>0?n(e,t):void n(null,null)},n))})};