function mergeNonAdjacentBySelector(e,t,r){var a,n={},i=[];for(a=e.length-1;a>=0;a--)if("selector"==e[a][0]&&0!==e[a][2].length){var o=stringifySelectors(e[a][1]);n[o]=[a].concat(n[o]||[]),2==n[o].length&&i.push(o)}for(a=i.length-1;a>=0;a--){var s=n[i[a]];e:for(var u=s.length-1;u>0;u--){var l=s[u-1],c=e[l],f=s[u],p=e[f];t:for(var h=1;h>=-1;h-=2){for(var w,d=1==h,v=d?l+1:f-1,m=d?f:l,g=d?1:-1,y=d?c:p,b=d?p:c,_=extractProperties(y);v!=m;){var x=extractProperties(e[v]);v+=g;var E=d?canReorder(_,x):canReorder(x,_);if(!E&&!d)continue e;if(!E&&d)continue t}d?(w=[y[2].length],Array.prototype.push.apply(y[2],b[2]),b[2]=y[2]):(w=[b[2].length],Array.prototype.push.apply(b[2],y[2])),optimizeProperties(b[1],b[2],w,!0,t,r),y[2]=[]}}}}var optimizeProperties=require("../properties/optimizer"),stringifySelectors=require("../stringifier/one-time").selectors,extractProperties=require("./extractor"),canReorder=require("./reorderable").canReorder;module.exports=mergeNonAdjacentBySelector;