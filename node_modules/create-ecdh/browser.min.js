function ECDH(t){this.curveType=aliases[t],this.curveType||(this.curveType={name:t}),this.curve=new elliptic.ec(this.curveType.name),this.keys=void 0}function formatReturnValue(t,e,n){Array.isArray(t)||(t=t.toArray());var r=new Buffer(t);if(n&&r.length<n){var i=new Buffer(n-r.length);i.fill(0),r=Buffer.concat([i,r])}return e?r.toString(e):r}var elliptic=require("elliptic"),BN=require("bn.js");module.exports=function(t){return new ECDH(t)};var aliases={secp256k1:{name:"secp256k1",byteLength:32},secp224r1:{name:"p224",byteLength:28},prime256v1:{name:"p256",byteLength:32},prime192v1:{name:"p192",byteLength:24},ed25519:{name:"ed25519",byteLength:32},secp384r1:{name:"p384",byteLength:48},secp521r1:{name:"p521",byteLength:66}};aliases.p224=aliases.secp224r1,aliases.p256=aliases.secp256r1=aliases.prime256v1,aliases.p192=aliases.secp192r1=aliases.prime192v1,aliases.p384=aliases.secp384r1,aliases.p521=aliases.secp521r1,ECDH.prototype.generateKeys=function(t,e){return this.keys=this.curve.genKeyPair(),this.getPublicKey(t,e)},ECDH.prototype.computeSecret=function(t,e,n){e=e||"utf8",Buffer.isBuffer(t)||(t=new Buffer(t,e));var r=this.curve.keyFromPublic(t).getPublic(),i=r.mul(this.keys.getPrivate()).getX();return formatReturnValue(i,n,this.curveType.byteLength)},ECDH.prototype.getPublicKey=function(t,e){var n=this.keys.getPublic("compressed"===e,!0);return"hybrid"===e&&(n[n.length-1]%2?n[0]=7:n[0]=6),formatReturnValue(n,t)},ECDH.prototype.getPrivateKey=function(t){return formatReturnValue(this.keys.getPrivate(),t)},ECDH.prototype.setPublicKey=function(t,e){return e=e||"utf8",Buffer.isBuffer(t)||(t=new Buffer(t,e)),this.keys._importPublic(t),this},ECDH.prototype.setPrivateKey=function(t,e){e=e||"utf8",Buffer.isBuffer(t)||(t=new Buffer(t,e));var n=new BN(t);return n=n.toString(16),this.keys._importPrivate(n),this};