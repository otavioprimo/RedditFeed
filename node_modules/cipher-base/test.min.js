var test=require("tape"),CipherBase=require("./"),inherits=require("inherits");test("basic version",function(t){function e(){CipherBase.call(this)}inherits(e,CipherBase),e.prototype._update=function(e){return t.ok(Buffer.isBuffer(e)),e},e.prototype._final=function(){};var n=new e,r="abc123abcd",i=n.update(r,"utf8","base64")+n["final"]("base64"),o=new Buffer(i,"base64").toString();t.equals(r,o),t.end()}),test("hash mode",function(t){function e(){CipherBase.call(this,"finalName"),this._cache=[]}inherits(e,CipherBase),e.prototype._update=function(e){t.ok(Buffer.isBuffer(e)),this._cache.push(e)},e.prototype._final=function(){return Buffer.concat(this._cache)};var n=new e,r="abc123abcd",i=n.update(r,"utf8").finalName("base64"),o=new Buffer(i,"base64").toString();t.equals(r,o),t.end()}),test("hash mode as stream",function(t){function e(){CipherBase.call(this,"finalName"),this._cache=[]}inherits(e,CipherBase),e.prototype._update=function(e){t.ok(Buffer.isBuffer(e)),this._cache.push(e)},e.prototype._final=function(){return Buffer.concat(this._cache)};var n=new e;n.on("error",function(e){t.notOk(e)});var r="abc123abcd";n.end(r,"utf8");var i=n.read().toString("base64"),o=new Buffer(i,"base64").toString();t.equals(r,o),t.end()}),test("encodings",function(t){function e(){CipherBase.call(this)}inherits(e,CipherBase),e.prototype._update=function(t){return t},e.prototype._final=function(){},t.test("mix and match encoding",function(t){t.plan(2);var n=new e;n.update("foo","utf8","utf8"),t["throws"](function(){n.update("foo","utf8","base64")}),n=new e,n.update("foo","utf8","base64"),t.doesNotThrow(function(){n.update("foo","utf8"),n["final"]("base64")})}),t.test("handle long uft8 plaintexts",function(t){t.plan(1);var n="ふっかつ　あきる　すぶり　はやい　つける　まゆげ　たんさん　みんぞく　ねほりはほり　せまい　たいまつばな　ひはん",r=new e,i=new e,o=i.update(r.update(n,"utf8","base64"),"base64","utf8");o+=i.update(r["final"]("base64"),"base64","utf8"),o+=i["final"]("utf8"),t.equals(n,o)})});