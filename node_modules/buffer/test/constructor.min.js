process.env.OBJECT_IMPL&&(global.TYPED_ARRAY_SUPPORT=!1);var B=require("../").Buffer,test=require("tape");test("new buffer from array",function(e){e.equal(new B([1,2,3]).toString(),""),e.end()}),test("new buffer from array w/ negatives",function(e){e.equal(new B([-1,-2,-3]).toString("hex"),"fffefd"),e.end()}),test("new buffer from array with mixed signed input",function(e){e.equal(new B([-255,255,-128,128,512,-512,511,-511]).toString("hex"),"01ff80800000ff01"),e.end()}),test("new buffer from string",function(e){e.equal(new B("hey","utf8").toString(),"hey"),e.end()}),test("new buffer from buffer",function(e){var t=new B("asdf"),r=new B(t);e.equal(t.toString("hex"),r.toString("hex")),e.end()}),test("new buffer from ArrayBuffer",function(e){if("undefined"!=typeof ArrayBuffer){var t=new Uint8Array([0,1,2,3]).buffer,r=new B(t);e.equal(r.length,4),e.equal(r[0],0),e.equal(r[1],1),e.equal(r[2],2),e.equal(r[3],3),e.equal(r[4],void 0)}e.end()}),test("new buffer from ArrayBuffer, shares memory",function(e){if(Buffer.TYPED_ARRAY_SUPPORT){var t=new Uint8Array([0,1,2,3]),r=t.buffer,n=new B(r);e.equal(n.length,4),e.equal(n[0],0),e.equal(n[1],1),e.equal(n[2],2),e.equal(n[3],3),e.equal(n[4],void 0),t[0]=10,e.equal(n[0],10),t[1]=11,e.equal(n[1],11),t[2]=12,e.equal(n[2],12),t[3]=13,e.equal(n[3],13)}e.end()}),test("new buffer from Uint8Array",function(e){if("undefined"!=typeof Uint8Array){var t=new Uint8Array([0,1,2,3]),r=new B(t);e.equal(t.length,r.length),e.equal(t[0],0),e.equal(t[1],1),e.equal(t[2],2),e.equal(t[3],3),e.equal(t[4],void 0)}e.end()}),test("new buffer from Uint16Array",function(e){if("undefined"!=typeof Uint16Array){var t=new Uint16Array([0,1,2,3]),r=new B(t);e.equal(t.length,r.length),e.equal(t[0],0),e.equal(t[1],1),e.equal(t[2],2),e.equal(t[3],3),e.equal(t[4],void 0)}e.end()}),test("new buffer from Uint32Array",function(e){if("undefined"!=typeof Uint32Array){var t=new Uint32Array([0,1,2,3]),r=new B(t);e.equal(t.length,r.length),e.equal(t[0],0),e.equal(t[1],1),e.equal(t[2],2),e.equal(t[3],3),e.equal(t[4],void 0)}e.end()}),test("new buffer from Int16Array",function(e){if("undefined"!=typeof Int16Array){var t=new Int16Array([0,1,2,3]),r=new B(t);e.equal(t.length,r.length),e.equal(t[0],0),e.equal(t[1],1),e.equal(t[2],2),e.equal(t[3],3),e.equal(t[4],void 0)}e.end()}),test("new buffer from Int32Array",function(e){if("undefined"!=typeof Int32Array){var t=new Int32Array([0,1,2,3]),r=new B(t);e.equal(t.length,r.length),e.equal(t[0],0),e.equal(t[1],1),e.equal(t[2],2),e.equal(t[3],3),e.equal(t[4],void 0)}e.end()}),test("new buffer from Float32Array",function(e){if("undefined"!=typeof Float32Array){var t=new Float32Array([0,1,2,3]),r=new B(t);e.equal(t.length,r.length),e.equal(t[0],0),e.equal(t[1],1),e.equal(t[2],2),e.equal(t[3],3),e.equal(t[4],void 0)}e.end()}),test("new buffer from Float64Array",function(e){if("undefined"!=typeof Float64Array){var t=new Float64Array([0,1,2,3]),r=new B(t);e.equal(t.length,r.length),e.equal(t[0],0),e.equal(t[1],1),e.equal(t[2],2),e.equal(t[3],3),e.equal(t[4],void 0)}e.end()}),test("new buffer from buffer.toJSON() output",function(e){if("undefined"==typeof JSON)return void e.end();var t=new B("test"),r=JSON.stringify(t),n=JSON.parse(r),i=new B(n);e.ok(t.equals(i)),e.end()});