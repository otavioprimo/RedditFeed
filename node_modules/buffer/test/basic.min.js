process.env.OBJECT_IMPL&&(global.TYPED_ARRAY_SUPPORT=!1);var B=require("../").Buffer,test=require("tape");test("instanceof Buffer",function(e){var t=new B([1,2]);e.ok(t instanceof B),e.end()}),test("convert to Uint8Array in modern browsers",function(e){if(B.TYPED_ARRAY_SUPPORT){var t=new B([1,2]),r=new Uint8Array(t.buffer);e.ok(r instanceof Uint8Array),e.equal(r[0],1),e.equal(r[1],2)}else e.pass("object impl: skipping test");e.end()}),test("indexes from a string",function(e){var t=new B("abc");e.equal(t[0],97),e.equal(t[1],98),e.equal(t[2],99),e.end()}),test("indexes from an array",function(e){var t=new B([97,98,99]);e.equal(t[0],97),e.equal(t[1],98),e.equal(t[2],99),e.end()}),test("setting index value should modify buffer contents",function(e){var t=new B([97,98,99]);e.equal(t[2],99),e.equal(t.toString(),"abc"),t[2]+=10,e.equal(t[2],109),e.equal(t.toString(),"abm"),e.end()}),test("storing negative number should cast to unsigned",function(e){var t=new B(1);B.TYPED_ARRAY_SUPPORT&&(t[0]=-3,e.equal(t[0],253)),t=new B(1),t.writeInt8(-3,0),e.equal(t[0],253),e.end()}),test("test that memory is copied from array-like",function(e){if(B.TYPED_ARRAY_SUPPORT){var t=new Uint8Array(4),r=new B(t);r[0]=1,r[1]=2,r[2]=3,r[3]=4,e.equal(t[0],0),e.equal(t[1],0),e.equal(t[2],0),e.equal(t[3],0)}else e.pass("object impl: skipping test");e.end()});