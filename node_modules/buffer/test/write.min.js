process.env.OBJECT_IMPL&&(global.TYPED_ARRAY_SUPPORT=!1);var B=require("../").Buffer,test=require("tape"),isnan=require("is-nan");test("buffer.write string should get parsed as number",function(e){var t=new B(64);t.writeUInt16LE("1003",0),e.equal(t.readUInt16LE(0),1003),e.end()}),test("buffer.writeUInt8 a fractional number will get Math.floored",function(e){var t=new B(1);t.writeInt8(5.5,0),e.equal(t[0],5),e.end()}),test("writeUint8 with a negative number throws",function(e){var t=new B(1);e["throws"](function(){t.writeUInt8(-3,0)}),e.end()}),test("hex of write{Uint,Int}{8,16,32}{LE,BE}",function(e){e.plan(20);for(var t=["03","0300","0003","03000000","00000003","fd","fdff","fffd","fdffffff","fffffffd"],r=[3,3,3,3,3,-3,-3,-3,-3,-3],n=["UInt","Int"],i=[8,16,32],o=0;o<n.length;o++)for(var a=n[o],s=0;s<i.length;s++)for(var u=i[s],l=8===u?[""]:["LE","BE"],c=0;c<l.length;c++){var f=l[c],p=new B(u/8),h="write"+a+u+f,d="Int"===a?-3:3;p[h](d,0),e.equal(p.toString("hex"),t.shift());var v="read"+a+u+f;e.equal(p[v](0),r.shift())}e.end()}),test("hex of write{Uint,Int}{8,16,32}{LE,BE} with overflow",function(e){if(!B.TYPED_ARRAY_SUPPORT)return e.pass("object impl: skipping overflow test"),void e.end();e.plan(30);for(var t=["","03","00","030000","000000","","fd","ff","fdffff","ffffff"],r=[void 0,3,0,NaN,0,void 0,253,-256,16777213,-256],n=["UInt","Int"],i=[8,16,32],o=0;o<n.length;o++)for(var a=n[o],s=0;s<i.length;s++)for(var u=i[s],l=8===u?[""]:["LE","BE"],c=0;c<l.length;c++){var f=l[c],p=new B(u/8-1),h=new B(4);h.writeUInt32BE(0,0);var d="write"+a+u+f,v="Int"===a?-3:3;p[d](v,0,!0),e.equal(p.toString("hex"),t.shift()),e.equal(h.readUInt32BE(0),0),h.writeInt32BE(-1,0);var m="read"+a+u+f,g=r.shift();isnan(g)?e.pass("equal"):e.equal(p[m](0,!0),g)}e.end()}),test("large values do not improperly roll over (ref #80)",function(e){var t=[-25589992,-633756690,-898146932],r=new B(12);r.fill(0),r.writeInt32BE(t[0],0);var n=r.readInt32BE(0);e.equal(t[0],n),r.writeInt32BE(t[1],4),n=r.readInt32BE(4),e.equal(t[1],n),r.writeInt32BE(t[2],8),n=r.readInt32BE(8),e.equal(t[2],n),e.end()});