var test=require("tape"),crypto=require("diffie-hellman/browser");test("diffie-hellman mod groups",function(e){["modp1","modp2","modp5","modp14","modp15","modp16"].forEach(function(t){e.test(t,function(e){e.plan(3);var r=crypto.getDiffieHellman(t),n=r.getPrime().toString("hex");r.generateKeys();var i=crypto.getDiffieHellman(t),a=i.getPrime().toString("hex");i.generateKeys(),e.equals(n,a,"equal primes");var o=r.getPublicKey(),s=i.getPublicKey();e.notEquals(o,s,"diff public keys");var u=r.computeSecret(s).toString("hex"),l=i.computeSecret(r.getPublicKey()).toString("hex");e.equals(u,l,"equal secrets")})})}),test("diffie-hellman key lengths",function(e){[64,65,192].forEach(function(t){e.test(""+t,function(e){e.plan(3);var r=crypto.createDiffieHellman(t),n=r.getPrime(),i=n.toString("hex"),a=crypto.createDiffieHellman(n),o=a.getPrime().toString("hex");a.generateKeys(),r.generateKeys(),e.equals(o,i,"equal primes");var s=a.getPublicKey(),u=r.getPublicKey();e.notEquals(s,u,"diff public keys");var l=a.computeSecret(u).toString("hex"),c=r.computeSecret(a.getPublicKey()).toString("hex");e.equals(l,c,"equal secrets")})})});