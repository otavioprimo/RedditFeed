var mods=["secp256k1","secp224r1","prime256v1","prime192v1"],test=require("tape"),_crypto=require("../"),createECDH1=_crypto.createECDH,createECDH2=require("create-ecdh/browser");mods.forEach(function(e){test("createECDH: "+e+" uncompressed",function(t){t.plan(2);var r=createECDH1(e);r.generateKeys();var n=createECDH2(e);n.generateKeys();var i=r.getPublicKey(),a=n.getPublicKey();t.notEquals(i.toString("hex"),a.toString("hex"),"diff public keys");var o=r.computeSecret(a).toString("hex"),s=n.computeSecret(i).toString("hex");t.equals(o,s,"equal secrets")}),test("createECDH: "+e+" compressed",function(t){t.plan(2);var r=createECDH1(e);r.generateKeys();var n=createECDH2(e);n.generateKeys();var i=r.getPublicKey(null,"compressed"),a=n.getPublicKey(null,"compressed");t.notEquals(i.toString("hex"),a.toString("hex"),"diff public keys");var o=r.computeSecret(a).toString("hex"),s=n.computeSecret(i).toString("hex");t.equals(o,s,"equal secrets")}),test("createECDH: "+e+" set stuff",function(t){t.plan(5);var r=createECDH1(e),n=createECDH2(e);r.generateKeys(),n.generateKeys(),r.setPrivateKey(n.getPrivateKey()),r.setPublicKey(n.getPublicKey());var i=r.getPrivateKey("hex"),a=n.getPrivateKey("hex");t.equals(i,a,"same private key");var o=r.getPublicKey(),s=n.getPublicKey();t.equals(o.toString("hex"),s.toString("hex"),"same public keys, uncompressed"),t.equals(r.getPublicKey("hex","compressed"),n.getPublicKey("hex","compressed"),"same public keys compressed"),t.equals(r.getPublicKey("hex","hybrid"),n.getPublicKey("hex","hybrid"),"same public keys hybrid");var u=r.computeSecret(s).toString("hex"),l=n.computeSecret(o).toString("hex");t.equals(u,l,"equal secrets")})});