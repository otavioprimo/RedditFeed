function testLib(e,t){algorithms.forEach(function(r){test(e+" hmac("+r+")",function(e){function n(i){if(i>=vectors.length)return e.end();var a=vectors[i],o=t(r,new Buffer(a.key,"hex")).update(a.data,"hex").digest();o=a.truncate?o.slice(0,a.truncate):o,o=o.toString("hex"),o!==a[r]&&e.equal(o,a[r]),setTimeout(n,0,i+1)}n(0)}),test("hmac("+r+")",function(e){function n(i){if(i>=vectors.length)return e.end();var a=vectors[i],o=t(r,new Buffer(a.key,"hex"));o.end(a.data,"hex");var s=o.read();s=a.truncate?s.slice(0,a.truncate):s,s=s.toString("hex"),s!==a[r]&&e.equal(s,a[r]),setTimeout(n,0,i+1)}n(0)})})}var test=require("tape"),algorithms=["sha1","sha224","sha256","sha384","sha512","md5","rmd160"],vectors=require("hash-test-vectors/hmac");testLib("createHmac in crypto-browserify",require("../").createHmac),testLib("create-hmac/browser",require("create-hmac/browser"));