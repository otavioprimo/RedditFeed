"use strict";function debug(e){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];DEBUG&&console.log.apply(console,[e].concat(t))}function formatDiagnostics(e){return e.map(function(e){var t=ts.DiagnosticCategory[e.category];if(e.file){t+=" at "+e.file.fileName+":";var r=e.file.getLineAndCharacterOfPosition(e.start),n=r.line,i=r.character;t+=n+1+":"+(i+1)+":"}return t+=" "+ts.flattenDiagnosticMessageText(e.messageText,"\n")}).join("\n")}function check(e){if(e&&e.length&&e[0])throw new Error(formatDiagnostics(e))}var fs_1=require("fs"),path=require("path"),ts=require("typescript"),DEBUG=!1;exports.formatDiagnostics=formatDiagnostics,exports.check=check;var Tsc=function(){function e(e,t){void 0===e&&(e=ts.sys.readFile),void 0===t&&(t=ts.sys.readDirectory),this.readFile=e,this.readDirectory=t}return e.prototype.readConfiguration=function(e,t){this.basePath=t;try{this.readDirectory(e).length>0&&(e=path.join(e,"tsconfig.json"))}catch(r){}var n=ts.readConfigFile(e,this.readFile),i=n.config,o=n.error;check([o]);var s={useCaseSensitiveFileNames:!0,fileExists:fs_1.existsSync,readDirectory:this.readDirectory};this.parsed=ts.parseJsonConfigFileContent(i,s,t),check(this.parsed.errors),this.ngOptions=i.angularCompilerOptions||{},this.ngOptions.genDir=path.join(t,this.ngOptions.genDir||".");for(var a=0,u=Object.keys(this.parsed.options);a<u.length;a++){var c=u[a];this.ngOptions[c]=this.parsed.options[c]}return{parsed:this.parsed,ngOptions:this.ngOptions}},e.prototype.typeCheck=function(e,t){debug("Checking global diagnostics..."),check(t.getGlobalDiagnostics());var r=[];debug("Type checking...");for(var n=0,i=t.getSourceFiles();n<i.length;n++){var o=i[n];r.push.apply(r,ts.getPreEmitDiagnostics(t,o))}check(r)},e.prototype.emit=function(e,t){var r=ts.createProgram(this.parsed.fileNames,this.parsed.options,e);debug("Emitting outputs...");var n=r.emit(),i=[];return i.push.apply(i,n.diagnostics),check(e.diagnostics),n.emitSkipped?1:0},e}();exports.Tsc=Tsc,exports.tsc=new Tsc;