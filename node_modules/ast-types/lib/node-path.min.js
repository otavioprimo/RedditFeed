function NodePath(e,t,r){if(!(this instanceof NodePath))throw new Error("NodePath constructor cannot be invoked without 'new'");Path.call(this,e,t,r)}function isBinary(e){return n.BinaryExpression.check(e)||n.LogicalExpression.check(e)}function isUnaryLike(e){return n.UnaryExpression.check(e)||n.SpreadElement&&n.SpreadElement.check(e)||n.SpreadProperty&&n.SpreadProperty.check(e)}function containsCallExpression(e){return n.CallExpression.check(e)?!0:isArray.check(e)?e.some(containsCallExpression):n.Node.check(e)?types.someField(e,function(e,t){return containsCallExpression(t)}):!1}function firstInStatement(e){for(var t,r;e.parent;e=e.parent){if(t=e.node,r=e.parent.node,n.BlockStatement.check(r)&&"body"===e.parent.name&&0===e.name){if(r.body[0]!==t)throw new Error("Nodes must be equal");return!0}if(n.ExpressionStatement.check(r)&&"expression"===e.name){if(r.expression!==t)throw new Error("Nodes must be equal");return!0}if(n.SequenceExpression.check(r)&&"expressions"===e.parent.name&&0===e.name){if(r.expressions[0]!==t)throw new Error("Nodes must be equal")}else if(n.CallExpression.check(r)&&"callee"===e.name){if(r.callee!==t)throw new Error("Nodes must be equal")}else if(n.MemberExpression.check(r)&&"object"===e.name){if(r.object!==t)throw new Error("Nodes must be equal")}else if(n.ConditionalExpression.check(r)&&"test"===e.name){if(r.test!==t)throw new Error("Nodes must be equal")}else if(isBinary(r)&&"left"===e.name){if(r.left!==t)throw new Error("Nodes must be equal")}else{if(!n.UnaryExpression.check(r)||r.prefix||"argument"!==e.name)return!1;if(r.argument!==t)throw new Error("Nodes must be equal")}}return!0}function cleanUpNodesAfterPrune(e){if(n.VariableDeclaration.check(e.node)){var t=e.get("declarations").value;if(!t||0===t.length)return e.prune()}else if(n.ExpressionStatement.check(e.node)){if(!e.get("expression").value)return e.prune()}else n.IfStatement.check(e.node)&&cleanUpIfStatementAfterPrune(e);return e}function cleanUpIfStatementAfterPrune(e){var t=e.get("test").value,r=e.get("alternate").value,i=e.get("consequent").value;if(i||r){if(!i&&r){var a=b.unaryExpression("!",t,!0);n.UnaryExpression.check(t)&&"!"===t.operator&&(a=t.argument),e.get("test").replace(a),e.get("consequent").replace(r),e.get("alternate").replace()}}else{var o=b.expressionStatement(t);e.replace(o)}}var types=require("./types"),n=types.namedTypes,b=types.builders,isNumber=types.builtInTypes.number,isArray=types.builtInTypes.array,Path=require("./path"),Scope=require("./scope"),NPp=NodePath.prototype=Object.create(Path.prototype,{constructor:{value:NodePath,enumerable:!1,writable:!0,configurable:!0}});Object.defineProperties(NPp,{node:{get:function(){return Object.defineProperty(this,"node",{configurable:!0,value:this._computeNode()}),this.node}},parent:{get:function(){return Object.defineProperty(this,"parent",{configurable:!0,value:this._computeParent()}),this.parent}},scope:{get:function(){return Object.defineProperty(this,"scope",{configurable:!0,value:this._computeScope()}),this.scope}}}),NPp.replace=function(){return delete this.node,delete this.parent,delete this.scope,Path.prototype.replace.apply(this,arguments)},NPp.prune=function(){var e=this.parent;return this.replace(),cleanUpNodesAfterPrune(e)},NPp._computeNode=function(){var e=this.value;if(n.Node.check(e))return e;var t=this.parentPath;return t&&t.node||null},NPp._computeParent=function(){var e=this.value,t=this.parentPath;if(!n.Node.check(e)){for(;t&&!n.Node.check(t.value);)t=t.parentPath;t&&(t=t.parentPath)}for(;t&&!n.Node.check(t.value);)t=t.parentPath;return t||null},NPp._computeScope=function(){var e=this.value,t=this.parentPath,r=t&&t.scope;return n.Node.check(e)&&Scope.isEstablishedBy(e)&&(r=new Scope(this,r)),r||null},NPp.getValueProperty=function(e){return types.getFieldValue(this.value,e)},NPp.needsParens=function(e){var t=this.parentPath;if(!t)return!1;var r=this.value;if(!n.Expression.check(r))return!1;if("Identifier"===r.type)return!1;for(;!n.Node.check(t.value);)if(t=t.parentPath,!t)return!1;var i=t.value;switch(r.type){case"UnaryExpression":case"SpreadElement":case"SpreadProperty":return"MemberExpression"===i.type&&"object"===this.name&&i.object===r;case"BinaryExpression":case"LogicalExpression":switch(i.type){case"CallExpression":return"callee"===this.name&&i.callee===r;case"UnaryExpression":case"SpreadElement":case"SpreadProperty":return!0;case"MemberExpression":return"object"===this.name&&i.object===r;case"BinaryExpression":case"LogicalExpression":var o=i.operator,t=PRECEDENCE[o],a=r.operator,s=PRECEDENCE[a];if(t>s)return!0;if(t===s&&"right"===this.name){if(i.right!==r)throw new Error("Nodes must be equal");return!0}default:return!1}case"SequenceExpression":switch(i.type){case"ForStatement":return!1;case"ExpressionStatement":return"expression"!==this.name;default:return!0}case"YieldExpression":switch(i.type){case"BinaryExpression":case"LogicalExpression":case"UnaryExpression":case"SpreadElement":case"SpreadProperty":case"CallExpression":case"MemberExpression":case"NewExpression":case"ConditionalExpression":case"YieldExpression":return!0;default:return!1}case"Literal":return"MemberExpression"===i.type&&isNumber.check(r.value)&&"object"===this.name&&i.object===r;case"AssignmentExpression":case"ConditionalExpression":switch(i.type){case"UnaryExpression":case"SpreadElement":case"SpreadProperty":case"BinaryExpression":case"LogicalExpression":return!0;case"CallExpression":return"callee"===this.name&&i.callee===r;case"ConditionalExpression":return"test"===this.name&&i.test===r;case"MemberExpression":return"object"===this.name&&i.object===r;default:return!1}default:if("NewExpression"===i.type&&"callee"===this.name&&i.callee===r)return containsCallExpression(r)}return e!==!0&&!this.canBeFirstInStatement()&&this.firstInStatement()?!0:!1};var PRECEDENCE={};[["||"],["&&"],["|"],["^"],["&"],["==","===","!=","!=="],["<",">","<=",">=","in","instanceof"],[">>","<<",">>>"],["+","-"],["*","/","%"]].forEach(function(e,t){e.forEach(function(e){PRECEDENCE[e]=t})}),NPp.canBeFirstInStatement=function(){var e=this.node;return!n.FunctionExpression.check(e)&&!n.ObjectExpression.check(e)},NPp.firstInStatement=function(){return firstInStatement(this)},module.exports=NodePath;