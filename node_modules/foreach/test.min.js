var test=require("tape"),forEach=require("./index.js");test("second argument: iterator",function(t){var e=[];t["throws"](function(){forEach(e)},TypeError,"undefined is not a function"),t["throws"](function(){forEach(e,null)},TypeError,"null is not a function"),t["throws"](function(){forEach(e,"")},TypeError,"string is not a function"),t["throws"](function(){forEach(e,/a/)},TypeError,"regex is not a function"),t["throws"](function(){forEach(e,!0)},TypeError,"true is not a function"),t["throws"](function(){forEach(e,!1)},TypeError,"false is not a function"),t["throws"](function(){forEach(e,NaN)},TypeError,"NaN is not a function"),t["throws"](function(){forEach(e,42)},TypeError,"42 is not a function"),t.doesNotThrow(function(){forEach(e,function(){})},"function is a function"),t.end()}),test("array",function(t){var e=[1,2,3];t.test("iterates over every item",function(t){var n=0;forEach(e,function(){n+=1}),t.equal(n,e.length,"iterates "+e.length+" times"),t.end()}),t.test("first iterator argument",function(t){var n=0;t.plan(e.length),forEach(e,function(r){t.equal(e[n],r,"item "+n+" is passed as first argument"),n+=1}),t.end()}),t.test("second iterator argument",function(t){var n=0;t.plan(e.length),forEach(e,function(e,r){t.equal(n,r,"index "+r+" is passed as second argument"),n+=1}),t.end()}),t.test("third iterator argument",function(t){t.plan(e.length),forEach(e,function(n,r,i){t.deepEqual(e,i,"array is passed as third argument")}),t.end()}),t.test("context argument",function(t){var e={};t.plan(1),forEach([1],function(){t.equal(this,e,'"this" is the passed context')},e),t.end()}),t.end()}),test("object",function(t){var e={a:1,b:2,c:3},n=["a","b","c"],r=function(){this.a=1,this.b=2};r.prototype.c=3;var i=["a","b"];t.test("iterates over every object literal key",function(t){var r=0;forEach(e,function(){r+=1}),t.equal(r,n.length,"iterated "+r+" times"),t.end()}),t.test("iterates only over own keys",function(t){var e=0;forEach(new r,function(){e+=1}),t.equal(e,i.length,"iterated "+i.length+" times"),t.end()}),t.test("first iterator argument",function(t){var r=0;t.plan(n.length),forEach(e,function(i){t.equal(e[n[r]],i,"item at key "+n[r]+" is passed as first argument"),r+=1}),t.end()}),t.test("second iterator argument",function(t){var r=0;t.plan(n.length),forEach(e,function(e,i){t.equal(n[r],i,"key "+i+" is passed as second argument"),r+=1}),t.end()}),t.test("third iterator argument",function(t){t.plan(n.length),forEach(e,function(n,r,i){t.deepEqual(e,i,"object is passed as third argument")}),t.end()}),t.test("context argument",function(t){var e={};t.plan(1),forEach({a:1},function(){t.equal(this,e,'"this" is the passed context')},e),t.end()}),t.end()}),test("string",function(t){var e="str";t.test("second iterator argument",function(t){var n=0;t.plan(2*e.length+1),forEach(e,function(r,i){t.equal(n,i,"index "+i+" is passed as second argument"),t.equal(e.charAt(i),r),n+=1}),t.equal(n,e.length,"iterates "+e.length+" times")}),t.end()});