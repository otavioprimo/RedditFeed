var after=require("after"),body=require("../index.js"),hammock=require("hammock"),test=require("tape");test("caching works",function(e){var t=hammock.Request({method:"GET",headers:{"Content-Type":"application/json"},url:"/somewhere"}),r=hammock.Response(),n=after(2,e.end.bind(e));body(t,r,{cache:!0},function(t,r){e.equal(r,"thisbody","raw body has been set"),e.pass("body is parsed"),n()}),t.on("end",function(){body(t,r,{cache:!0},function(t,r){e.equal(r,"thisbody","cached body is provided"),e.pass("body is parsed"),n()})}),t.end("thisbody")}),test("parallel caching works",function(e){var t=hammock.Request({method:"GET",headers:{"Content-Type":"application/json"},url:"/somewhere"});t.end("thisbody");for(var r=hammock.Response(),n=after(5,function(){process.nextTick(function(){e.equal(t.listeners("rawBody").length,0,"rawBody listeners cleared"),e.end()})}),i=0;5>i;++i)body(t,r,{cache:!0},function(t,r){e.equal(r,"thisbody","raw body has been set"),e.pass("body is parsed"),n()})});