function handleRequest(e,t){function r(r,n){return r?sendJson(e,t,r.message):void sendJson(e,t,n)}"/body"===e.url?body(e,t,{},r):"/form"===e.url?formBody(e,t,r):"/json"===e.url?jsonBody(e,{},r):"/any"===e.url&&anyBody(e,r)}function runTests(e,t){test("body works",function(t){t.end=after(2,t.end.bind(t)),testBody("/body",e,t),e({uri:"/any",body:"foo"},function(e,r,n){t.equal(e,null),t.equal(JSON.parse(n),"Could not parse content type header: "),t.end()})}),test("form works",function(t){t.end=after(2,t.end.bind(t)),testFormBody("/form",e,t),testFormBody("/any",e,t)}),test("json works",function(t){t.end=after(2,t.end.bind(t)),testJsonBody("/json",e,t),testJsonBody("/any",e,t)}).on("end",t)}function testBody(e,t,r){t({uri:e,body:"foo"},function(e,t,n){r.equal(e,null,"error is not null"),console.log("body",n,JSON.parse(n)),r.equal(JSON.parse(n),"foo","body is incorrect"),r.end()})}function testFormBody(e,t,r){t({uri:e,form:{foo:"bar"}},function(e,t,n){r.equal(e,null,"error is not null"),r.equal(JSON.parse(n).foo,"bar","body is incorrect"),r.end()})}function testJsonBody(e,t,r){t({uri:e,json:{foo:"bar"}},function(e,t,n){r.equal(e,null,"error is not null"),r.equal(n.foo,"bar","body is incorrect"),r.end()})}var testServer=require("test-server"),test=require("tape"),sendJson=require("send-data/json"),after=require("after"),body=require("../index"),jsonBody=require("../json"),formBody=require("../form"),anyBody=require("../any");testServer(handleRequest,runTests);