"use strict";function rollup(e,t){e=config_1.generateContext(e),t=config_1.getUserConfigFile(e,taskInfo,t);var r=new logger_1.Logger("rollup");return rollupWorker(e,t).then(function(){e.bundleState=interfaces_1.BuildState.SuccessfulBuild,r.finish()})["catch"](function(t){throw e.bundleState=interfaces_1.BuildState.RequiresBuild,r.fail(t)})}function rollupUpdate(e,t,r){var n=new logger_1.Logger("rollup update"),i=config_1.getUserConfigFile(r,taskInfo,null);return rollupWorker(r,i).then(function(){r.bundleState=interfaces_1.BuildState.SuccessfulBuild,n.finish()})["catch"](function(e){throw r.bundleState=interfaces_1.BuildState.RequiresBuild,n.fail(e)})}function rollupWorker(e,t){return new Promise(function(r,n){var i=getRollupConfig(e,t);i.dest=getOutputDest(e,i),i.entry=config_1.replacePathVars(e,path_1.normalize(i.entry)),i.dest=config_1.replacePathVars(e,path_1.normalize(i.dest)),e.isProd||i.plugins.unshift(ion_compiler_1.ionCompiler(e)),i.cache=cachedBundle,i.onwarn||(i.onwarn=createOnWarnFn()),logger_1.Logger.debug("entry: "+i.entry+", dest: "+i.dest+", cache: "+i.cache+", format: "+i.format),checkDeprecations(e,i),rollupBundler.rollup(i).then(function(t){return logger_1.Logger.debug("bundle.modules: "+t.modules.length),e.moduleFiles=t.modules.map(function(e){var t=e.id.indexOf(path_1.sep);return t>=0?e.id.substring(t):e.id}),e.isWatch&&(cachedBundle=t),t.write(i)}).then(function(){i=i.cache=i.onwarn=i.plugins=null,r()})["catch"](function(e){cachedBundle=i=i.cache=i.onwarn=i.plugins=null,n(new errors_1.BuildError(e))})})}function getRollupConfig(e,t){return t=config_1.getUserConfigFile(e,taskInfo,t),config_1.fillConfigDefaults(t,taskInfo.defaultConfigFile)}function getOutputDest(e,t){return path_1.isAbsolute(t.dest)?t.dest:path_1.join(e.buildDir,t.dest)}function checkDeprecations(e,t){if(!e.isProd&&(t.entry.indexOf(".tmp")>-1||t.entry.endsWith(".js")))throw new errors_1.BuildError('\nDev builds no longer use the ".tmp" directory. Please update your rollup config\'s\nentry to use your "src" directory\'s "main.dev.ts" TypeScript file.\nFor example, the entry for dev builds should be: "src/app/main.dev.ts"')}function invalidateCache(){cachedBundle=null}function createOnWarnFn(){var e={};return function(t){t in e||(e[t]=!0,IGNORE_WARNS.some(function(e){return t.indexOf(e)>-1})||logger_1.Logger.warn("rollup: "+t))}}var interfaces_1=require("./util/interfaces"),errors_1=require("./util/errors"),config_1=require("./util/config"),ion_compiler_1=require("./plugins/ion-compiler"),path_1=require("path"),logger_1=require("./logger/logger"),rollupBundler=require("rollup");exports.rollup=rollup,exports.rollupUpdate=rollupUpdate,exports.rollupWorker=rollupWorker,exports.getRollupConfig=getRollupConfig,exports.getOutputDest=getOutputDest,exports.invalidateCache=invalidateCache;var cachedBundle=null,IGNORE_WARNS=["keyword is equivalent to"],taskInfo={fullArg:"--rollup",shortArg:"-r",envVar:"IONIC_ROLLUP",packageConfig:"ionic_rollup",defaultConfigFile:"rollup.config"};