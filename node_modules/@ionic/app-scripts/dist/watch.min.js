"use strict";function watch(e,t){function n(){return startWatchers(e,t).then(function(){r.ready()})}e=config_1.generateContext(e),t=config_1.getUserConfigFile(e,taskInfo,t),e.isProd=!1,e.isWatch=!0,e.sassState=interfaces_1.BuildState.RequiresBuild,e.transpileState=interfaces_1.BuildState.RequiresBuild,e.bundleState=interfaces_1.BuildState.RequiresBuild;var r=new logger_1.Logger("watch");return buildTask.build(e).then(n,n)["catch"](function(e){throw r.fail(e)})}function startWatchers(e,t){var r=config_1.fillConfigDefaults(t,taskInfo.defaultConfigFile),n=r.watchers.map(function(t,n){return startWatcher(n,t,e,r)});return Promise.all(n)}function startWatcher(e,t,r,n){return new Promise(function(n,i){var o=setTimeout(function(){var e=null;"string"==typeof t.paths?e=t.paths:Array.isArray(t.paths)&&(e=t.paths.join(", ")),i(new errors_1.BuildError("A watch configured to watch the following paths failed to start. It likely that a file referenced does not exist: "+e))},3e3);if(prepareWatcher(r,t),!t.paths)return logger_1.Logger.error("watcher config, index "+e+': missing "paths"'),void n();if(!t.callback)return logger_1.Logger.error("watcher config, index "+e+': missing "callback"'),void n();var a=chokidar.watch(t.paths,t.options),s="all";t.eventName&&(s=t.eventName),a.on(s,function(e,n){n||(n=e,e=t.eventName),config_1.setIonicEnvironment(r.isProd),n=path_1.join(r.rootDir,n),logger_1.Logger.debug("watch callback start, id: "+watchCount+", isProd: "+r.isProd+", event: "+e+", path: "+n);var i=function(e,t,r,n){return n.callback(e,t,r)};i(e,n,r,t).then(function(){logger_1.Logger.debug("watch callback complete, id: "+watchCount+", isProd: "+r.isProd+", event: "+e+", path: "+n),watchCount++})["catch"](function(t){logger_1.Logger.debug("watch callback error, id: "+watchCount+", isProd: "+r.isProd+", event: "+e+", path: "+n),logger_1.Logger.debug(""+t),watchCount++})}),a.on("ready",function(){clearTimeout(o),logger_1.Logger.debug("watcher ready: "+t.options.cwd+t.paths),n()}),a.on("error",function(e){clearTimeout(o),i(new errors_1.BuildError("watcher error: "+t.options.cwd+t.paths+": "+e))})})}function prepareWatcher(e,t){t.options=t.options||{},t.options.cwd||(t.options.cwd=e.rootDir),"boolean"!=typeof t.options.ignoreInitial&&(t.options.ignoreInitial=!0),"string"==typeof t.options.ignored&&(t.options.ignored=path_1.normalize(config_1.replacePathVars(e,t.options.ignored))),"string"==typeof t.paths?t.paths=path_1.normalize(config_1.replacePathVars(e,t.paths)):Array.isArray(t.paths)&&(t.paths=t.paths.map(function(t){return path_1.normalize(config_1.replacePathVars(e,t))}))}function buildUpdate(e,t,r){var n={event:e,filePath:t,ext:path_1.extname(t).toLowerCase()};return queuedChangedFiles.some(function(e){return e.filePath===t})||(queuedChangedFiles.push(n),clearTimeout(queuedChangeFileTimerId),queuedChangeFileTimerId=setTimeout(function(){var e=runBuildUpdate(r,queuedChangedFiles);queuedChangedFiles.length=0,e&&buildTask.buildUpdate(e.event,e.filePath,r)},BUILD_UPDATE_DEBOUNCE_MS)),Promise.resolve()}function runBuildUpdate(e,t){if(!t||!t.length)return null;var r={event:t.map(function(e){return e.event}).find(function(e){return"change"!==e})||"change",filePath:t[0].filePath,changedFiles:t.map(function(e){return e.filePath})},n=t.filter(function(e){return".js"===e.ext});n.length&&(e.bundleState=interfaces_1.BuildState.RequiresUpdate);var i=t.filter(function(e){return".ts"===e.ext});i.length>1?e.transpileState=interfaces_1.BuildState.RequiresBuild:i.length&&(transpile_1.canRunTranspileUpdate(i[0].event,i[0].filePath,e)?e.transpileState=interfaces_1.BuildState.RequiresUpdate:e.transpileState=interfaces_1.BuildState.RequiresBuild);var o=t.filter(function(e){return".scss"===e.ext});o.length&&(e.sassState=interfaces_1.BuildState.RequiresUpdate);var a=t.filter(function(e){return".ts"===e.ext&&"change"!==e.event});a.length&&(e.sassState=interfaces_1.BuildState.RequiresUpdate);var s=t.filter(function(e){return".html"===e.ext});return s.length&&(e.bundleState===interfaces_1.BuildState.SuccessfulBuild&&s.every(function(e){return"change"===e.event})?e.templateState=interfaces_1.BuildState.RequiresUpdate:e.transpileState=interfaces_1.BuildState.RequiresBuild),(e.transpileState===interfaces_1.BuildState.RequiresUpdate||e.transpileState===interfaces_1.BuildState.RequiresBuild)&&(e.bundleState===interfaces_1.BuildState.SuccessfulBuild||e.bundleState===interfaces_1.BuildState.RequiresUpdate?e.bundleState=interfaces_1.BuildState.RequiresUpdate:e.bundleState=interfaces_1.BuildState.RequiresBuild),r.filePath=i.concat(o,s,n)[0].filePath,r}var buildTask=require("./build"),interfaces_1=require("./util/interfaces"),errors_1=require("./util/errors"),transpile_1=require("./transpile"),config_1=require("./util/config"),path_1=require("path"),logger_1=require("./logger/logger"),chokidar=require("chokidar");exports.watch=watch,exports.prepareWatcher=prepareWatcher;var queuedChangedFiles=[],queuedChangeFileTimerId;exports.buildUpdate=buildUpdate,exports.runBuildUpdate=runBuildUpdate;var taskInfo={fullArg:"--watch",shortArg:null,envVar:"IONIC_WATCH",packageConfig:"ionic_watch",defaultConfigFile:"watch.config"},watchCount=0,BUILD_UPDATE_DEBOUNCE_MS=20;