"use strict";function transpile(e){e=config_1.generateContext(e);var t={configFile:getTsConfigPath(e),writeInMemory:!0,sourceMaps:!0,cache:!0,inlineTemplate:e.inlineTemplates},r=new logger_1.Logger("transpile");return transpileWorker(e,t).then(function(){e.transpileState=interfaces_1.BuildState.SuccessfulBuild,r.finish()})["catch"](function(t){throw e.transpileState=interfaces_1.BuildState.RequiresBuild,r.fail(t)})}function transpileUpdate(e,t,r){var n={configFile:getTsConfigPath(r),writeInMemory:!0,sourceMaps:!0,cache:!1,inlineTemplate:r.inlineTemplates},i=new logger_1.Logger("transpile update");return transpileUpdateWorker(e,t,r,n).then(function(e){r.transpileState=interfaces_1.BuildState.SuccessfulBuild,i.finish()})["catch"](function(e){throw r.transpileState=interfaces_1.BuildState.RequiresBuild,i.fail(e)})}function transpileWorker(e,t){return new Promise(function(r,n){logger_diagnostics_1.clearDiagnostics(e,logger_diagnostics_1.DiagnosticsType.TypeScript);var i=getTsConfig(e,t.configFile);t.sourceMaps===!1?i.options.sourceMap=!1:i.options.sourceMap=bundle_1.buildJsSourceMaps(e);var o=cleanFileNames(e,i.fileNames);i.options.declaration=void 0;var a=ts.createCompilerHost(i.options),s=ts.createProgram(o,i.options,a,cachedProgram);s.emit(void 0,function(r,n,i,o,a){t.writeInMemory&&(writeSourceFiles(e.fileCache,a),writeTranspiledFilesCallback(e.fileCache,r,n,t.inlineTemplate))}),cachedProgram=s;var u=s.getSyntacticDiagnostics().concat(s.getSemanticDiagnostics()).concat(s.getOptionsDiagnostics()),l=logger_typescript_1.runTypeScriptDiagnostics(e,u);l.length?(logger_diagnostics_1.printDiagnostics(e,logger_diagnostics_1.DiagnosticsType.TypeScript,l,!0,!0),n(new errors_1.BuildError)):r()})}function canRunTranspileUpdate(e,t,r){return"change"===e&&r.fileCache?r.fileCache.has(path.resolve(t)):!1}function transpileUpdateWorker(e,t,r,n){return new Promise(function(e,i){logger_diagnostics_1.clearDiagnostics(r,logger_diagnostics_1.DiagnosticsType.TypeScript),t=path.normalize(path.resolve(t));var o=getTsConfig(r,n.configFile);o.options.sourceMap=bundle_1.buildJsSourceMaps(r);var a={compilerOptions:o.options,fileName:t,reportDiagnostics:!0},s=fs_1.readFileSync(t,"utf8"),u=ts.transpileModule(s,a),l=logger_typescript_1.runTypeScriptDiagnostics(r,u.diagnostics);if(l.length)logger_diagnostics_1.printDiagnostics(r,logger_diagnostics_1.DiagnosticsType.TypeScript,l,!1,!0),logger_1.Logger.debug("transpileUpdateWorker: transpileModule, diagnostics: "+l.length),i(new errors_1.BuildError);else{var c=helpers_1.changeExtension(t,".js"),p={path:c+".map",content:u.sourceMapText},f=u.outputText;n.inlineTemplate&&(f=template_1.inlineTemplate(u.outputText,t));var h={path:c,content:f},d={path:t,content:s};r.fileCache.set(p.path,p),r.fileCache.set(h.path,h),r.fileCache.set(d.path,d),e()}})}function transpileDiagnosticsOnly(e){return new Promise(function(t){workerEvent.once("DiagnosticsWorkerDone",function(){t()}),runDiagnosticsWorker(e)})}function runDiagnosticsWorker(e){if(!diagnosticsWorker){var t=path.join(__dirname,"transpile-worker.js");diagnosticsWorker=child_process_1.fork(t,[],{env:{FORCE_COLOR:!0}}),logger_1.Logger.debug("diagnosticsWorker created, pid: "+diagnosticsWorker.pid),diagnosticsWorker.on("error",function(e){logger_1.Logger.error("diagnosticsWorker error, pid: "+diagnosticsWorker.pid+", error: "+e),workerEvent.emit("DiagnosticsWorkerDone")}),diagnosticsWorker.on("exit",function(e){logger_1.Logger.debug("diagnosticsWorker exited, pid: "+diagnosticsWorker.pid),diagnosticsWorker=null}),diagnosticsWorker.on("message",function(e){workerEvent.emit("DiagnosticsWorkerDone")})}var r={rootDir:e.rootDir,buildDir:e.buildDir,isProd:e.isProd,configFile:getTsConfigPath(e)};diagnosticsWorker.send(r)}function cleanFileNames(e,t){var r=e.isProd?"main.dev.ts":"main.prod.ts";return t.filter(function(e){return-1===e.indexOf(r)})}function writeSourceFiles(e,t){for(var r=0,n=t;r<n.length;r++){var i=n[r],o=path.normalize(path.resolve(i.fileName));e.set(o,{path:o,content:i.text})}}function writeTranspiledFilesCallback(e,t,r,n){if(t=path.normalize(path.resolve(t)),t.endsWith(".js")){var i=e.get(t);i||(i={content:"",path:t}),n?i.content=template_1.inlineTemplate(r,t):i.content=r,e.set(t,i)}else if(t.endsWith(".js.map")){var i=e.get(t);i||(i={content:"",path:t}),i.content=r,e.set(t,i)}}function getTsConfig(e,t){var r=null;t=t||getTsConfigPath(e);var n=ts.readConfigFile(t,function(e){return fs_1.readFileSync(e,"utf8")});if(!n)throw new errors_1.BuildError('tsconfig: invalid tsconfig file, "'+t+'"');if(n.error&&n.error.messageText)throw new errors_1.BuildError("tsconfig: "+n.error.messageText);if(!n.config)throw new errors_1.BuildError('tsconfig: invalid config, "'+t+'""');var i=ts.parseJsonConfigFileContent(n.config,ts.sys,e.rootDir,{},t),o=logger_typescript_1.runTypeScriptDiagnostics(e,i.errors);if(o.length)throw logger_diagnostics_1.printDiagnostics(e,logger_diagnostics_1.DiagnosticsType.TypeScript,o,!0,!0),new errors_1.BuildError;return r={options:i.options,fileNames:i.fileNames,typingOptions:i.typingOptions,raw:i.raw}}function getTsConfigPath(e){return path.join(e.rootDir,"tsconfig.json")}var interfaces_1=require("./util/interfaces"),errors_1=require("./util/errors"),bundle_1=require("./bundle"),helpers_1=require("./util/helpers"),events_1=require("events"),child_process_1=require("child_process"),config_1=require("./util/config"),template_1=require("./template"),logger_1=require("./logger/logger"),fs_1=require("fs"),logger_typescript_1=require("./logger/logger-typescript"),logger_diagnostics_1=require("./logger/logger-diagnostics"),path=require("path"),ts=require("typescript");exports.transpile=transpile,exports.transpileUpdate=transpileUpdate,exports.transpileWorker=transpileWorker,exports.canRunTranspileUpdate=canRunTranspileUpdate,exports.transpileDiagnosticsOnly=transpileDiagnosticsOnly;var workerEvent=new events_1.EventEmitter,diagnosticsWorker=null;exports.getTsConfig=getTsConfig;var cachedProgram=null;exports.getTsConfigPath=getTsConfigPath;