"use strict";function lint(e,t){return e=config_1.generateContext(e),worker_client_1.runWorker("lint","lintWorker",e,t)["catch"](function(e){throw new errors_1.BuildError(e)})}function lintWorker(e,t){return getLintConfig(e,t).then(function(t){return lintApp(e,t)})["catch"](function(){})}function lintUpdate(e,t,r){return new Promise(function(e){var n={configFile:config_1.getUserConfigFile(r,taskInfo,null),filePath:t};worker_client_1.runWorker("lint","lintUpdateWorker",r,n),e()})}function lintUpdateWorker(e,t){return getLintConfig(e,t.configFile).then(function(r){var n=tslint_1.createProgram(r,e.srcDir);return lintFile(e,n,t.filePath)})["catch"](function(){})}function lintApp(e,t){var r=tslint_1.createProgram(t,e.srcDir),n=tslint_1.getFileNames(r),i=n.map(function(t){return lintFile(e,r,t)});return Promise.all(i)}function lintFile(e,t,r){return new Promise(function(n){return isMpegFile(r)?void n():void fs.readFile(r,"utf8",function(i,o){if(i)return void n();try{var s=tslint_1.findConfiguration(null,r),a=new Linter(r,o,{configuration:s,formatter:null,formattersDirectory:null,rulesDirectory:null},t),u=a.lint();if(u&&u.failures){var c=logger_tslint_1.runTsLintDiagnostics(e,u.failures);logger_diagnostics_1.printDiagnostics(e,logger_diagnostics_1.DiagnosticsType.TsLint,c,!0,!1)}}catch(l){logger_1.Logger.debug("Linter "+l)}n()})})}function getLintConfig(e,t){return new Promise(function(r,n){t=config_1.getUserConfigFile(e,taskInfo,t),t||(t=path_1.join(e.rootDir,"tslint.json")),logger_1.Logger.debug("tslint config: "+t),fs_1.access(t,function(e){return e?void n():void r(t)})})}function isMpegFile(e){var t=new Buffer(256);t.fill(0);var r=fs.openSync(e,"r");try{if(fs.readSync(r,t,0,256,null),71===t.readInt8(0)&&71===t.readInt8(188))return logger_1.Logger.debug("tslint: "+e+": ignoring MPEG transport stream"),!0}finally{fs.closeSync(r)}return!1}var fs_1=require("fs"),errors_1=require("./util/errors"),tslint_1=require("tslint"),config_1=require("./util/config"),path_1=require("path"),logger_1=require("./logger/logger"),logger_diagnostics_1=require("./logger/logger-diagnostics"),logger_tslint_1=require("./logger/logger-tslint"),worker_client_1=require("./worker-client"),Linter=require("tslint"),fs=require("fs");exports.lint=lint,exports.lintWorker=lintWorker,exports.lintUpdate=lintUpdate,exports.lintUpdateWorker=lintUpdateWorker;var taskInfo={fullArg:"--tslint",shortArg:"-i",envVar:"ionic_tslint",packageConfig:"IONIC_TSLINT",defaultConfigFile:"../tslint"};