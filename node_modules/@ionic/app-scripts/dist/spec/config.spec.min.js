"use strict";var config_1=require("../util/config"),config_2=require("../util/config"),path_1=require("path");describe("config",function(){describe("generateContext",function(){it("should set isWatch true with isWatch true context",function(){var e=config_1.generateContext({isWatch:!0});expect(e.isWatch).toEqual(!0)}),it("should set isWatch false by default",function(){var e=config_1.generateContext();expect(e.isWatch).toEqual(!1)}),it("should set isProd false with isProd false context",function(){var e=config_1.generateContext({isProd:!1});expect(e.isProd).toEqual(!1)}),it("should set default bundler when invalid value",function(){var e=config_1.generateContext();expect(e.bundler).toEqual("webpack")}),it("should set default bundler when not set",function(){var e=config_1.generateContext();expect(e.bundler).toEqual("webpack")}),it("should set isProd by default",function(){var e=config_1.generateContext();expect(e.isProd).toEqual(!0)}),it("should create an object when passed nothing",function(){var e=config_1.generateContext();expect(e).toBeDefined()})}),describe("getIsProd",function(){it("should set isProd false with env var",function(){e={},config_2.setProcessEnvVar("IONIC_DEV","true"),expect(config_1.getIsProd(e)).toEqual(!1)}),it("should set isProd false with package.json string config",function(){e={},config_2.setAppPackageJsonData({config:{ionic_dev:"true"}}),expect(config_1.getIsProd(e)).toEqual(!1)}),it("should set isProd false with package.json config",function(){e={},config_2.setAppPackageJsonData({config:{ionic_dev:!0}}),expect(config_1.getIsProd(e)).toEqual(!1)}),it("should not reassign isProd when already set",function(){e={},e.isProd=!0,config_2.addArgv("--dev"),expect(config_1.getIsProd(e)).toEqual(!0)}),it("should set isProd false with short --d arg",function(){e={},config_2.addArgv("-d"),expect(config_1.getIsProd(e)).toEqual(!1)}),it("should set isProd false with full --dev arg",function(){e={},config_2.addArgv("--dev"),expect(config_1.getIsProd(e)).toEqual(!1)}),it("should default to isProd true",function(){e={},expect(config_1.getIsProd(e)).toEqual(!0)})}),describe("getConfigValue",function(){it("should get arg full value",function(){config_2.addArgv("--full"),config_2.addArgv("fullArgValue"),config_2.addArgv("-s"),config_2.addArgv("shortArgValue"),config_2.setProcessEnvVar("ENV_VAR","myProcessEnvVar"),config_2.setAppPackageJsonData({config:{config_prop:"myPackageConfigVal"}});var t=config_1.getConfigValue(e,"--full","-s","ENV_VAR","config_prop","defaultValue");expect(t).toEqual("fullArgValue")}),it("should get arg short value",function(){config_2.addArgv("-s"),config_2.addArgv("shortArgValue"),config_2.setProcessEnvVar("ENV_VAR","myProcessEnvVar"),config_2.setAppPackageJsonData({config:{config_prop:"myPackageConfigVal"}});var t=config_1.getConfigValue(e,"--full","-s","ENV_VAR","config_prop","defaultValue");expect(t).toEqual("shortArgValue")}),it("should get envVar value",function(){config_2.setProcessEnvVar("ENV_VAR","myProcessEnvVar"),config_2.setAppPackageJsonData({config:{config_prop:"myPackageConfigVal"}});var t=config_1.getConfigValue(e,"--full","-s","ENV_VAR","config_prop","defaultValue");expect(t).toEqual("myProcessEnvVar")}),it("should get package.json config value",function(){config_2.setAppPackageJsonData({config:{config_prop:"myPackageConfigVal"}});var t=config_1.getConfigValue(e,"--full","-s","ENV_VAR","config_prop","defaultValue");expect(t).toEqual("myPackageConfigVal")}),it("should get default value",function(){var t=config_1.getConfigValue(e,"--full","-s","ENV_VAR","config_prop","defaultValue");expect(t).toEqual("defaultValue")})}),describe("bundlerStrategy",function(){it("should get rollup by full arg",function(){config_2.addArgv("--rollup"),config_2.addArgv("my.rollup.confg.js");var t=config_1.bundlerStrategy(e);expect(t).toEqual("rollup")}),it("should get rollup by short arg",function(){config_2.addArgv("-r"),config_2.addArgv("my.rollup.confg.js");var t=config_1.bundlerStrategy(e);expect(t).toEqual("rollup")}),it("should get rollup by bundler arg",function(){config_2.addArgv("--bundler"),config_2.addArgv("rollup");var t=config_1.bundlerStrategy(e);expect(t).toEqual("rollup")}),it("should get rollup by env var",function(){config_2.setProcessEnv({ionic_bundler:"rollup"}),config_2.setAppPackageJsonData({config:{ionic_bundler:"rollup"}});var t=config_1.bundlerStrategy(e);expect(t).toEqual("rollup")}),it("should get rollup by package.json config",function(){config_2.setAppPackageJsonData({config:{ionic_bundler:"rollup"}});var t=config_1.bundlerStrategy(e);expect(t).toEqual("rollup")}),it("should get webpack with invalid env var",function(){config_2.setProcessEnv({ionic_bundler:"bobsBundler"});var t=config_1.bundlerStrategy(e);expect(t).toEqual("webpack")}),it("should get rollup by env var",function(){config_2.setProcessEnv({ionic_bundler:"rollup"}),config_2.setAppPackageJsonData({config:{ionic_bundler:"rollup"}});var t=config_1.bundlerStrategy(e);expect(t).toEqual("rollup")}),it("should get rollup by package.json config",function(){config_2.setAppPackageJsonData({config:{ionic_bundler:"rollup"}});var t=config_1.bundlerStrategy(e);expect(t).toEqual("rollup")}),it("should get webpack by default",function(){var t=config_1.bundlerStrategy(e);expect(t).toEqual("webpack")})}),describe("getUserConfigFile",function(){it("should get config from package.json config",function(){config_2.setAppPackageJsonData({config:{ionic_config:"myconfig.js"}});var e=null,t={rootDir:process.cwd()},r={fullArg:"--full",shortArg:"-s",defaultConfigFile:"default.config.js",envVar:"IONIC_CONFIG",packageConfig:"ionic_config"},n=config_1.getUserConfigFile(t,r,e);expect(n).toEqual(path_1.resolve("myconfig.js"))}),it("should get config from env var",function(){config_2.setProcessEnv({IONIC_CONFIG:"myconfig.js"});var e=null,t={rootDir:process.cwd()},r={fullArg:"--full",shortArg:"-s",defaultConfigFile:"default.config.js",envVar:"IONIC_CONFIG",packageConfig:"ionic_config"},n=config_1.getUserConfigFile(t,r,e);expect(n).toEqual(path_1.resolve("myconfig.js"))}),it("should get config from short arg",function(){config_2.addArgv("-s"),config_2.addArgv("myconfig.js");var e=null,t={rootDir:process.cwd()},r={fullArg:"--full",shortArg:"-s",defaultConfigFile:"default.config.js",envVar:"IONIC_CONFIG",packageConfig:"ionic_config"},n=config_1.getUserConfigFile(t,r,e);expect(n).toEqual(path_1.resolve("myconfig.js"))}),it("should get config from full arg",function(){config_2.addArgv("--full"),config_2.addArgv("myconfig.js");var e=null,t={rootDir:process.cwd()},r={fullArg:"--full",shortArg:"-s",defaultConfigFile:"default.config.js",envVar:"IONIC_CONFIG",packageConfig:"ionic_config"},n=config_1.getUserConfigFile(t,r,e);expect(n).toEqual(path_1.resolve("myconfig.js"))}),it("should get userConfigFile",function(){var e="myconfig.js",t={rootDir:process.cwd()},r={fullArg:"--full",shortArg:"-s",defaultConfigFile:"default.config.js",envVar:"IONIC_CONFIG",packageConfig:"ionic_config"},n=config_1.getUserConfigFile(t,r,e);expect(n).toEqual(path_1.resolve("myconfig.js"))}),it("should not get a user config",function(){var e=null,t={rootDir:process.cwd()},r={fullArg:"--full",shortArg:"-s",defaultConfigFile:"default.config.js",envVar:"IONIC_CONFIG",packageConfig:"ionic_config"},n=config_1.getUserConfigFile(t,r,e);expect(n).toEqual(null)})});var e;beforeEach(function(){config_2.setProcessArgs(["node","ionic-app-scripts"]),config_2.setProcessEnv({}),config_2.setCwd(""),config_2.setAppPackageJsonData(null),e=config_1.generateContext({})})});