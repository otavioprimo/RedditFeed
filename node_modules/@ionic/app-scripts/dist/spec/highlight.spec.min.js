"use strict";var highlight_1=require("../highlight/highlight");describe("highlight.js",function(){describe("highlightError",function(){it("should error highlight unescaped",function(){var e="x & y",t=2,r=1,n=highlight_1.highlightError(e,t,r);expect(n).toEqual('x <span class="ion-diagnostics-error-chr">&</span> y')}),it("should error highlight escaped >",function(){var e="x > y",t=highlight_1.highlight("typescript",e,!0).value,r=2,n=1,i=highlight_1.highlightError(t,r,n);expect(i).toEqual('x <span class="ion-diagnostics-error-chr">&gt;</span> y')}),it("should error highlight before escaped >",function(){var e="if (x > y) return;",t=highlight_1.highlight("typescript",e,!0).value,r=4,n=1,i=highlight_1.highlightError(t,r,n);expect(i).toEqual('<span class="hljs-keyword">if</span> (<span class="ion-diagnostics-error-chr">x</span> &gt; y) <span class="hljs-keyword">return</span>;')}),it("should error highlight after escaped <",function(){var e="if (x < y) return;",t=highlight_1.highlight("typescript",e,!0).value,r=8,n=1,i=highlight_1.highlightError(t,r,n);expect(i).toEqual('<span class="hljs-keyword">if</span> (x &lt; <span class="ion-diagnostics-error-chr">y</span>) <span class="hljs-keyword">return</span>;')}),it("should error highlight first 3 chars",function(){var e='<span class="hljs-keyword">var</span> name: <span class="hljs-built_in">string</span> = <span class="hljs-string">\'Ellie\'</span>;',t=0,r=3,n=highlight_1.highlightError(e,t,r);expect(n).toEqual('<span class="hljs-keyword"><span class="ion-diagnostics-error-chr">v</span><span class="ion-diagnostics-error-chr">a</span><span class="ion-diagnostics-error-chr">r</span></span> name: <span class="hljs-built_in">string</span> = <span class="hljs-string">\'Ellie\'</span>;')}),it("should error highlight second char",function(){var e='<span class="hljs-keyword">var</span> name: <span class="hljs-built_in">string</span> = <span class="hljs-string">\'Ellie\'</span>;',t=1,r=1,n=highlight_1.highlightError(e,t,r);expect(n).toEqual('<span class="hljs-keyword">v<span class="ion-diagnostics-error-chr">a</span>r</span> name: <span class="hljs-built_in">string</span> = <span class="hljs-string">\'Ellie\'</span>;')}),it("should error highlight first char",function(){var e='<span class="hljs-keyword">var</span> name: <span class="hljs-built_in">string</span> = <span class="hljs-string">\'Ellie\'</span>;',t=0,r=1,n=highlight_1.highlightError(e,t,r);expect(n).toEqual('<span class="hljs-keyword"><span class="ion-diagnostics-error-chr">v</span>ar</span> name: <span class="hljs-built_in">string</span> = <span class="hljs-string">\'Ellie\'</span>;')}),it("should return the same if there are is no errorLength",function(){var e='<span class="hljs-keyword">var</span> name: <span class="hljs-built_in">string</span> = <span class="hljs-string">\'Ellie\'</span>;',t=10,r=0,n=highlight_1.highlightError(e,t,r);expect(n).toEqual(e)}),it("should return the same if there are is no errorCharStart",function(){var e='<span class="hljs-keyword">var</span> name: <span class="hljs-built_in">string</span> = <span class="hljs-string">\'Ellie\'</span>;',t=-1,r=10,n=highlight_1.highlightError(e,t,r);expect(n).toEqual(e)})}),describe("typescript",function(){it("should replace typescript with <",function(){var e="if (x < y) return;",t=highlight_1.highlight("typescript",e,!0).value;expect(t).toEqual('<span class="hljs-keyword">if</span> (x &lt; y) <span class="hljs-keyword">return</span>;')}),it("should replace typescript",function(){var e="var name: string = 'Ellie';",t=highlight_1.highlight("typescript",e,!0).value;expect(t).toEqual('<span class="hljs-keyword">var</span> name: <span class="hljs-built_in">string</span> = <span class="hljs-string">\'Ellie\'</span>;')})}),describe("html",function(){it("should replace html",function(){var e='<div key="value">Text</div>',t=highlight_1.highlight("html",e,!0).value;expect(t).toEqual('<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">key</span>=<span class="hljs-string">"value"</span>&gt;</span>Text<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>')})}),describe("scss",function(){it("should replace scss",function(){var e=".className { color: $red; }",t=highlight_1.highlight("scss",e,!0).value;expect(t).toEqual('<span class="hljs-selector-class">.className</span> { <span class="hljs-attribute">color</span>: <span class="hljs-variable">$red</span>; }')})})});