"use strict";module.exports=function(e,t){var l,f,r=" ",n=e.level,i=e.dataLevel,o=e.schema[t],s=e.schemaPath+"."+t,a=e.errSchemaPath+"/"+t,u=!e.opts.allErrors,c="data"+(i||""),p=e.opts.v5&&o&&o.$data;p?(r+=" var schema"+n+" = "+e.util.getData(o.$data,i,e.dataPathArr)+"; ",f="schema"+n):f=o;var h=p?"(new RegExp("+f+"))":e.usePattern(o);r+="if ( ",p&&(r+=" ("+f+" !== undefined && typeof "+f+" != 'string') || "),r+=" !"+h+".test("+c+") ) {   ";var d=d||[];d.push(r),r="",e.createErrors!==!1?(r+=" { keyword: '"+(l||"pattern")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(a)+" , params: { pattern:  ",r+=p?""+f:""+e.util.toQuotedString(o),r+="  } ",e.opts.messages!==!1&&(r+=" , message: 'should match pattern \"",r+=p?"' + "+f+" + '":""+e.util.escapeQuotes(o),r+="\"' "),e.opts.verbose&&(r+=" , schema:  ",r+=p?"validate.schema"+s:""+e.util.toQuotedString(o),r+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),r+=" } "):r+=" {} ";var v=r;return r=d.pop(),r+=!e.compositeRule&&u?e.async?" throw new ValidationError(["+v+"]); ":" validate.errors = ["+v+"]; return false; ":" var err = "+v+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",r+="} ",u&&(r+=" else { "),r};