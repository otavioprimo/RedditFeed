"use strict";module.exports=function(e,t){var l,h,r=" ",n=e.level,i=e.dataLevel,o=e.schema[t],s=e.schemaPath+"."+t,a=e.errSchemaPath+"/"+t,u=!e.opts.allErrors,c="data"+(i||""),p="valid"+n,f=e.opts.v5&&o&&o.$data;if(f?(r+=" var schema"+n+" = "+e.util.getData(o.$data,i,e.dataPathArr)+"; ",h="schema"+n):h=o,(o||f)&&e.opts.uniqueItems!==!1){f&&(r+=" var "+p+"; if ("+h+" === false || "+h+" === undefined) "+p+" = true; else if (typeof "+h+" != 'boolean') "+p+" = false; else { "),r+=" var "+p+" = true; if ("+c+".length > 1) { var i = "+c+".length, j; outer: for (;i--;) { for (j = i; j--;) { if (equal("+c+"[i], "+c+"[j])) { "+p+" = false; break outer; } } } } ",f&&(r+="  }  "),r+=" if (!"+p+") {   ";var d=d||[];d.push(r),r="",e.createErrors!==!1?(r+=" { keyword: '"+(l||"uniqueItems")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(a)+" , params: { i: i, j: j } ",e.opts.messages!==!1&&(r+=" , message: 'should NOT have duplicate items (items ## ' + j + ' and ' + i + ' are identical)' "),e.opts.verbose&&(r+=" , schema:  ",r+=f?"validate.schema"+s:""+o,r+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),r+=" } "):r+=" {} ";var v=r;r=d.pop(),r+=!e.compositeRule&&u?e.async?" throw new ValidationError(["+v+"]); ":" validate.errors = ["+v+"]; return false; ":" var err = "+v+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",r+=" } ",u&&(r+=" else { ")}else u&&(r+=" if (true) { ");return r};