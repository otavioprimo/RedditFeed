"use strict";module.exports=function(e,t){var l,r=" ",n=e.level,i=e.dataLevel,o=e.schema[t],s=e.schemaPath+"."+t,a=e.errSchemaPath+"/"+t,u=!e.opts.allErrors,c="data"+(i||""),p="valid"+n,f="errs__"+n,h=e.util.copy(e),d="";h.level++;var v=o.every(function(t){return e.util.schemaHasRules(t,e.RULES.all)});if(v){var m=h.baseId;r+=" var "+f+" = errors; var "+p+" = false;  ";var g=e.compositeRule;e.compositeRule=h.compositeRule=!0;var y=o;if(y)for(var _,b=-1,w=y.length-1;w>b;)_=y[b+=1],h.schema=_,h.schemaPath=s+"["+b+"]",h.errSchemaPath=a+"/"+b,r+="  "+e.validate(h)+" ",h.baseId=m,r+=" "+p+" = "+p+" || valid"+h.level+"; if (!"+p+") { ",d+="}";e.compositeRule=h.compositeRule=g,r+=" "+d+" if (!"+p+") {  var err =   ",e.createErrors!==!1?(r+=" { keyword: '"+(l||"anyOf")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(a)+" , params: {} ",e.opts.messages!==!1&&(r+=" , message: 'should match some schema in anyOf' "),e.opts.verbose&&(r+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),r+=" } "):r+=" {} ",r+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else {  errors = "+f+"; if (vErrors !== null) { if ("+f+") vErrors.length = "+f+"; else vErrors = null; } ",e.opts.allErrors&&(r+=" } "),r=e.util.cleanUpCode(r)}else u&&(r+=" if (true) { ");return r};