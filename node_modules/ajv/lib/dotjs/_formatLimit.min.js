"use strict";module.exports=function(e,t){var l,r=" ",n=e.level,i=e.dataLevel,o=e.schema[t],s=e.schemaPath+"."+t,a=e.errSchemaPath+"/"+t,u=!e.opts.allErrors,c="data"+(i||""),p="valid"+n;if(r+="var "+p+" = undefined;",e.opts.format===!1)return r+=" "+p+" = true; ";var f=e.schema.format,h=e.opts.v5&&f.$data,d="";if(h){var v=e.util.getData(f.$data,i,e.dataPathArr),m="format"+n,g="compare"+n;r+=" var "+m+" = formats["+v+"] , "+g+" = "+m+" && "+m+".compare;"}else{var m=e.formats[f];if(!m||!m.compare)return r+="  "+p+" = true; ";var g="formats"+e.util.getProperty(f)+".compare"}var S,y="formatMaximum"==t,_="formatExclusive"+(y?"Maximum":"Minimum"),b=e.schema[_],w=e.opts.v5&&b&&b.$data,x=y?"<":">",E="result"+n,C=e.opts.v5&&o&&o.$data;if(C?(r+=" var schema"+n+" = "+e.util.getData(o.$data,i,e.dataPathArr)+"; ",S="schema"+n):S=o,w){var A=e.util.getData(b.$data,i,e.dataPathArr),k="exclusive"+n,T="op"+n,P="' + "+T+" + '";r+=" var schemaExcl"+n+" = "+A+"; ",A="schemaExcl"+n,r+=" if (typeof "+A+" != 'boolean' && "+A+" !== undefined) { "+p+" = false; ";var l=_,O=O||[];O.push(r),r="",e.createErrors!==!1?(r+=" { keyword: '"+(l||"_formatExclusiveLimit")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(a)+" , params: {} ",e.opts.messages!==!1&&(r+=" , message: '"+_+" should be boolean' "),e.opts.verbose&&(r+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),r+=" } "):r+=" {} ";var N=r;r=O.pop(),r+=!e.compositeRule&&u?e.async?" throw new ValidationError(["+N+"]); ":" validate.errors = ["+N+"]; return false; ":" var err = "+N+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",r+=" }  ",u&&(d+="}",r+=" else { "),C&&(r+=" if ("+S+" === undefined) "+p+" = true; else if (typeof "+S+" != 'string') "+p+" = false; else { ",d+="}"),h&&(r+=" if (!"+g+") "+p+" = true; else { ",d+="}"),r+=" var "+E+" = "+g+"("+c+",  ",r+=C?""+S:""+e.util.toQuotedString(o),r+=" ); if ("+E+" === undefined) "+p+" = false; var "+k+" = "+A+" === true; if ("+p+" === undefined) { "+p+" = "+k+" ? "+E+" "+x+" 0 : "+E+" "+x+"= 0; } if (!"+p+") var op"+n+" = "+k+" ? '"+x+"' : '"+x+"=';"}else{var k=b===!0,P=x;k||(P+="=");var T="'"+P+"'";C&&(r+=" if ("+S+" === undefined) "+p+" = true; else if (typeof "+S+" != 'string') "+p+" = false; else { ",d+="}"),h&&(r+=" if (!"+g+") "+p+" = true; else { ",d+="}"),r+=" var "+E+" = "+g+"("+c+",  ",r+=C?""+S:""+e.util.toQuotedString(o),r+=" ); if ("+E+" === undefined) "+p+" = false; if ("+p+" === undefined) "+p+" = "+E+" "+x,k||(r+="="),r+=" 0;"}r+=""+d+"if (!"+p+") { ";var l=t,O=O||[];O.push(r),r="",e.createErrors!==!1?(r+=" { keyword: '"+(l||"_formatLimit")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(a)+" , params: { comparison: "+T+", limit:  ",r+=C?""+S:""+e.util.toQuotedString(o),r+=" , exclusive: "+k+" } ",e.opts.messages!==!1&&(r+=" , message: 'should be "+P+' "',r+=C?"' + "+S+" + '":""+e.util.escapeQuotes(o),r+="\"' "),e.opts.verbose&&(r+=" , schema:  ",r+=C?"validate.schema"+s:""+e.util.toQuotedString(o),r+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),r+=" } "):r+=" {} ";var N=r;return r=O.pop(),r+=!e.compositeRule&&u?e.async?" throw new ValidationError(["+N+"]); ":" validate.errors = ["+N+"]; return false; ":" var err = "+N+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",r+="}"};