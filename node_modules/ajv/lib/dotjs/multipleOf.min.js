"use strict";module.exports=function(e,t){var l,f,r=" ",n=e.level,i=e.dataLevel,o=e.schema[t],s=e.schemaPath+"."+t,a=e.errSchemaPath+"/"+t,u=!e.opts.allErrors,c="data"+(i||""),p=e.opts.v5&&o&&o.$data;p?(r+=" var schema"+n+" = "+e.util.getData(o.$data,i,e.dataPathArr)+"; ",f="schema"+n):f=o,r+="var division"+n+";if (",p&&(r+=" "+f+" !== undefined && ( typeof "+f+" != 'number' || "),r+=" (division"+n+" = "+c+" / "+f+", ",r+=e.opts.multipleOfPrecision?" Math.abs(Math.round(division"+n+") - division"+n+") > 1e-"+e.opts.multipleOfPrecision+" ":" division"+n+" !== parseInt(division"+n+") ",r+=" ) ",p&&(r+="  )  "),r+=" ) {   ";var h=h||[];h.push(r),r="",e.createErrors!==!1?(r+=" { keyword: '"+(l||"multipleOf")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(a)+" , params: { multipleOf: "+f+" } ",e.opts.messages!==!1&&(r+=" , message: 'should be multiple of ",r+=p?"' + "+f:""+o+"'"),e.opts.verbose&&(r+=" , schema:  ",r+=p?"validate.schema"+s:""+o,r+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),r+=" } "):r+=" {} ";var d=r;return r=h.pop(),r+=!e.compositeRule&&u?e.async?" throw new ValidationError(["+d+"]); ":" validate.errors = ["+d+"]; return false; ":" var err = "+d+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",r+="} ",u&&(r+=" else { "),r};