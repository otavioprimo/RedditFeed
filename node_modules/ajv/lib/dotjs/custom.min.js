"use strict";module.exports=function(e,t){var l,h,r=" ",n=e.level,i=e.dataLevel,o=e.schema[t],s=e.schemaPath+"."+t,a=e.errSchemaPath+"/"+t,u=!e.opts.allErrors,c="data"+(i||""),p="errs__"+n,f=e.opts.v5&&o&&o.$data;f?(r+=" var schema"+n+" = "+e.util.getData(o.$data,i,e.dataPathArr)+"; ",h="schema"+n):h=o;var y,_,b,w,x,d=this,v="definition"+n,m=d.definition;m.validate;if(f&&m.$data){x="keywordValidate"+n;var E=m.validateSchema;r+=" var "+v+" = RULES.custom['"+t+"'].definition; var "+x+" = "+v+".validate;"}else w=e.useCustomRule(d,o,e.schema,e),h="validate.schema"+s,x=w.code,y=m.compile,_=m.inline,b=m.macro;var C=x+".errors",S="i"+n,A="ruleErr"+n,k=m.async;if(k&&!e.async)throw new Error("async keyword in sync schema");if(_||b||(r+=""+C+" = null;"),r+="var "+p+" = errors;var valid"+n+";",_&&m.statements)r+=" "+w.validate;else if(b){var P=e.util.copy(e);P.level++,P.schema=w.validate,P.schemaPath="";var T=e.compositeRule;e.compositeRule=P.compositeRule=!0;var O=e.validate(P).replace(/validate\.schema/g,x);e.compositeRule=P.compositeRule=T,r+=" "+O}else if(!_){var N=N||[];N.push(r),r="",r+="  "+x+".call( ",r+=e.opts.passContext?"this":"self",r+=y||m.schema===!1?" , "+c+" ":" , "+h+" , "+c+" , validate.schema"+e.schemaPath+" ",r+=" , (dataPath || '')",'""'!=e.errorPath&&(r+=" + "+e.errorPath),r+=i?" , data"+(i-1||"")+" , "+e.dataPathArr[i]+" ":" , parentData , parentDataProperty ",r+=" , rootData )  ";var M=r;r=N.pop(),m.errors!==!1&&(k?(C="customErrors"+n,r+=" var "+C+" = null; try { valid"+n+" = "+e.yieldAwait+M+"; } catch (e) { valid"+n+" = false; if (e instanceof ValidationError) "+C+" = e.errors; else throw e; } "):r+=" "+x+".errors = null; ")}r+="if (",E&&(r+=" !"+v+".validateSchema("+h+") || "),r+=" ! ",r+=_?m.statements?" valid"+n+" ":" ("+w.validate+") ":b?" valid"+P.level+" ":k?m.errors===!1?" ("+e.yieldAwait+M+") ":" valid"+n+" ":" "+M+" ",r+=") { ",l=d.keyword;var N=N||[];N.push(r),r="";var N=N||[];N.push(r),r="",e.createErrors!==!1?(r+=" { keyword: '"+(l||"custom")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(a)+" , params: { keyword: '"+d.keyword+"' } ",e.opts.messages!==!1&&(r+=" , message: 'should pass \""+d.keyword+"\" keyword validation' "),e.opts.verbose&&(r+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),r+=" } "):r+=" {} ";var I=r;r=N.pop(),r+=!e.compositeRule&&u?e.async?" throw new ValidationError(["+I+"]); ":" validate.errors = ["+I+"]; return false; ":" var err = "+I+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ";var D=r;return r=N.pop(),_?m.errors?"full"!=m.errors&&(r+="  for (var "+S+"="+p+"; "+S+"<errors; "+S+"++) { var "+A+" = vErrors["+S+"]; if ("+A+".dataPath === undefined) { "+A+".dataPath = (dataPath || '') + "+e.errorPath+"; } if ("+A+".schemaPath === undefined) { "+A+'.schemaPath = "'+a+'"; } ',e.opts.verbose&&(r+=" "+A+".schema = "+h+"; "+A+".data = "+c+"; "),r+=" } "):m.errors===!1?r+=" "+D+" ":(r+=" if ("+p+" == errors) { "+D+" } else {  for (var "+S+"="+p+"; "+S+"<errors; "+S+"++) { var "+A+" = vErrors["+S+"]; if ("+A+".dataPath === undefined) { "+A+".dataPath = (dataPath || '') + "+e.errorPath+"; } if ("+A+".schemaPath === undefined) { "+A+'.schemaPath = "'+a+'"; } ',e.opts.verbose&&(r+=" "+A+".schema = "+h+"; "+A+".data = "+c+"; "),r+=" } } "):b?(r+="   var err =   ",e.createErrors!==!1?(r+=" { keyword: '"+(l||"custom")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(a)+" , params: { keyword: '"+d.keyword+"' } ",e.opts.messages!==!1&&(r+=" , message: 'should pass \""+d.keyword+"\" keyword validation' "),e.opts.verbose&&(r+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),r+=" } "):r+=" {} ",r+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",!e.compositeRule&&u&&(r+=e.async?" throw new ValidationError(vErrors); ":" validate.errors = vErrors; return false ")):m.errors===!1?r+=" "+D+" ":(r+=" if (Array.isArray("+C+")) { if (vErrors === null) vErrors = "+C+"; else vErrors = vErrors.concat("+C+"); errors = vErrors.length;  for (var "+S+"="+p+"; "+S+"<errors; "+S+"++) { var "+A+" = vErrors["+S+"];  "+A+".dataPath = (dataPath || '') + "+e.errorPath+";   "+A+'.schemaPath = "'+a+'";  ',e.opts.verbose&&(r+=" "+A+".schema = "+h+"; "+A+".data = "+c+"; "),r+=" } } else { "+D+" } "),r+=" } ",u&&(r+=" else { "),r};