"use strict";module.exports=function(e,t){var u,p,f,r=" ",n=e.level,i=e.dataLevel,o=e.schema[t],s=e.errSchemaPath+"/"+t,a=!e.opts.allErrors,l="data"+(i||""),c="valid"+n;if("#"==o||"#/"==o)e.isRoot?(p=e.async,f="validate"):(p=e.root.schema.$async===!0,f="root.refVal[0]");else{var h=e.resolveRef(e.baseId,o,e.isRoot);if(void 0===h){var d="can't resolve reference "+o+" from id "+e.baseId;if("fail"==e.opts.missingRefs){console.log(d);var v=v||[];v.push(r),r="",e.createErrors!==!1?(r+=" { keyword: '"+(u||"$ref")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(s)+" , params: { ref: '"+e.util.escapeQuotes(o)+"' } ",e.opts.messages!==!1&&(r+=" , message: 'can\\'t resolve reference "+e.util.escapeQuotes(o)+"' "),e.opts.verbose&&(r+=" , schema: "+e.util.toQuotedString(o)+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+l+" "),r+=" } "):r+=" {} ";var m=r;r=v.pop(),r+=!e.compositeRule&&a?e.async?" throw new ValidationError(["+m+"]); ":" validate.errors = ["+m+"]; return false; ":" var err = "+m+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",a&&(r+=" if (false) { ")}else{if("ignore"!=e.opts.missingRefs){var g=new Error(d);throw g.missingRef=e.resolve.url(e.baseId,o),g.missingSchema=e.resolve.normalizeId(e.resolve.fullPath(g.missingRef)),g}console.log(d),a&&(r+=" if (true) { ")}}else if(h.inline){var y=e.util.copy(e);y.level++,y.schema=h.schema,y.schemaPath="",y.errSchemaPath=o;var _=e.validate(y).replace(/validate\.schema/g,h.code);r+=" "+_+" ",a&&(r+=" if (valid"+y.level+") { ")}else p=h.$async===!0,f=h.code}if(f){var v=v||[];v.push(r),r="",r+=e.opts.passContext?" "+f+".call(this, ":" "+f+"( ",r+=" "+l+", (dataPath || '')",'""'!=e.errorPath&&(r+=" + "+e.errorPath),r+=i?" , data"+(i-1||"")+" , "+e.dataPathArr[i]+" ":" , parentData , parentDataProperty ",r+=", rootData)  ";var b=r;if(r=v.pop(),p){if(!e.async)throw new Error("async schema referenced by sync schema");r+=" try { ",a&&(r+="var "+c+" ="),r+=" "+e.yieldAwait+" "+b+"; } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; } ",a&&(r+=" if ("+c+") { ")}else r+=" if (!"+b+") { if (vErrors === null) vErrors = "+f+".errors; else vErrors = vErrors.concat("+f+".errors); errors = vErrors.length; } ",a&&(r+=" else { ")}return r};