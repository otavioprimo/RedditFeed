"use strict";module.exports=function(e,t){var l,r=" ",n=e.level,i=e.dataLevel,o=e.schema[t],s=e.schemaPath+"."+t,a=e.errSchemaPath+"/"+t,u=!e.opts.allErrors,c="data"+(i||""),p="valid"+n,f="key"+n,h="patternMatched"+n,d="",v=e.opts.ownProperties;r+="var "+p+" = true;";var m=o;if(m)for(var g,y=-1,_=m.length-1;_>y;){g=m[y+=1],r+=" var "+h+" = false; for (var "+f+" in "+c+") {  ",v&&(r+=" if (!Object.prototype.hasOwnProperty.call("+c+", "+f+")) continue; "),r+=" "+h+" = "+e.usePattern(g)+".test("+f+"); if ("+h+") break; } ";var b=e.util.escapeQuotes(g);r+=" if (!"+h+") { "+p+" = false;  var err =   ",e.createErrors!==!1?(r+=" { keyword: '"+(l||"patternRequired")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(a)+" , params: { missingPattern: '"+b+"' } ",e.opts.messages!==!1&&(r+=" , message: 'should have property matching pattern \\'"+b+"\\'' "),e.opts.verbose&&(r+=" , schema: validate.schema"+s+" , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),r+=" } "):r+=" {} ",r+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; }   ",u&&(d+="}",r+=" else { ")}return r+=""+d};