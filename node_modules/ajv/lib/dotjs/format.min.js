"use strict";module.exports=function(e,t){var l,r=" ",n=e.level,i=e.dataLevel,o=e.schema[t],s=e.schemaPath+"."+t,a=e.errSchemaPath+"/"+t,u=!e.opts.allErrors,c="data"+(i||"");if(e.opts.format===!1)return u&&(r+=" if (true) { "),r;var f,p=e.opts.v5&&o&&o.$data;p?(r+=" var schema"+n+" = "+e.util.getData(o.$data,i,e.dataPathArr)+"; ",f="schema"+n):f=o;var h=e.opts.unknownFormats,d=Array.isArray(h);if(p){var v="format"+n;r+=" var "+v+" = formats["+f+"]; var isObject"+n+" = typeof "+v+" == 'object' && !("+v+" instanceof RegExp) && "+v+".validate; if (isObject"+n+") { ",e.async&&(r+=" var async"+n+" = "+v+".async; "),r+=" "+v+" = "+v+".validate; } if (  ",p&&(r+=" ("+f+" !== undefined && typeof "+f+" != 'string') || "),r+=" (",(h===!0||d)&&(r+=" ("+f+" && !"+v+" ",d&&(r+=" && self._opts.unknownFormats.indexOf("+f+") == -1 "),r+=") || "),r+=" ("+v+" && !(typeof "+v+" == 'function' ? ",r+=e.async?" (async"+n+" ? "+e.yieldAwait+" "+v+"("+c+") : "+v+"("+c+")) ":" "+v+"("+c+") ",r+=" : "+v+".test("+c+"))))) {"}else{var v=e.formats[o];if(!v){if(h===!0||d&&-1==h.indexOf(o))throw new Error('unknown format "'+o+'" is used in schema at path "'+e.errSchemaPath+'"');return d||(console.warn('unknown format "'+o+'" ignored in schema at path "'+e.errSchemaPath+'"'),"ignore"!==h&&console.warn("In the next major version it will throw exception. See option unknownFormats for more information")),u&&(r+=" if (true) { "),r}var m="object"==typeof v&&!(v instanceof RegExp)&&v.validate;if(m){var g=v.async===!0;v=v.validate}if(g){if(!e.async)throw new Error("async format in sync schema");var y="formats"+e.util.getProperty(o)+".validate";r+=" if (!("+e.yieldAwait+" "+y+"("+c+"))) { "}else{r+=" if (! ";var y="formats"+e.util.getProperty(o);m&&(y+=".validate"),r+="function"==typeof v?" "+y+"("+c+") ":" "+y+".test("+c+") ",r+=") { "}}var _=_||[];_.push(r),r="",e.createErrors!==!1?(r+=" { keyword: '"+(l||"format")+"' , dataPath: (dataPath || '') + "+e.errorPath+" , schemaPath: "+e.util.toQuotedString(a)+" , params: { format:  ",r+=p?""+f:""+e.util.toQuotedString(o),r+="  } ",e.opts.messages!==!1&&(r+=" , message: 'should match format \"",r+=p?"' + "+f+" + '":""+e.util.escapeQuotes(o),r+="\"' "),e.opts.verbose&&(r+=" , schema:  ",r+=p?"validate.schema"+s:""+e.util.toQuotedString(o),r+="         , parentSchema: validate.schema"+e.schemaPath+" , data: "+c+" "),r+=" } "):r+=" {} ";var b=r;return r=_.pop(),r+=!e.compositeRule&&u?e.async?" throw new ValidationError(["+b+"]); ":" validate.errors = ["+b+"]; return false; ":" var err = "+b+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",r+=" } ",u&&(r+=" else { "),r};