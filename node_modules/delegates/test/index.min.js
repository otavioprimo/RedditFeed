var assert=require("assert"),delegate=require("..");describe(".method(name)",function(){it("should delegate methods",function(){var e={};e.request={foo:function(t){return assert(this==e.request),t}},delegate(e,"request").method("foo"),e.foo("something").should.equal("something")})}),describe(".getter(name)",function(){it("should delegate getters",function(){var e={};e.request={get type(){return"text/html"}},delegate(e,"request").getter("type"),e.type.should.equal("text/html")})}),describe(".setter(name)",function(){it("should delegate setters",function(){var e={};e.request={get type(){return this._type.toUpperCase()},set type(e){this._type=e}},delegate(e,"request").setter("type"),e.type="hey",e.request.type.should.equal("HEY")})}),describe(".access(name)",function(){it("should delegate getters and setters",function(){var e={};e.request={get type(){return this._type.toUpperCase()},set type(e){this._type=e}},delegate(e,"request").access("type"),e.type="hey",e.type.should.equal("HEY")})}),describe(".fluent(name)",function(){it("should delegate in a fluent fashion",function(){var e={settings:{env:"development"}};delegate(e,"settings").fluent("env"),e.env().should.equal("development"),e.env("production").should.equal(e),e.settings.env.should.equal("production")})});