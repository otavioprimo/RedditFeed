function LruCache(t){this.capacity=0|t,this.map=Object.create(null),this.list=new DoublyLinkedList}function DoublyLinkedList(){this.firstNode=null,this.lastNode=null}function DoublyLinkedNode(t,e){this.key=t,this.val=e,this.prev=null,this.next=null}module.exports=function(t){return new LruCache(t)},LruCache.prototype.get=function(t){var e=this.map[t];return null==e?void 0:(this.used(e),e.val)},LruCache.prototype.set=function(t,e){var n=this.map[t];if(null!=n)n.val=e;else{if(this.capacity||this.prune(),!this.capacity)return!1;n=new DoublyLinkedNode(t,e),this.map[t]=n,this.capacity--}return this.used(n),!0},LruCache.prototype.used=function(t){this.list.moveToFront(t)},LruCache.prototype.prune=function(){var t=this.list.pop();null!=t&&(delete this.map[t.key],this.capacity++)},DoublyLinkedList.prototype.moveToFront=function(t){this.firstNode!=t&&(this.remove(t),null==this.firstNode?(this.firstNode=t,this.lastNode=t,t.prev=null,t.next=null):(t.prev=null,t.next=this.firstNode,t.next.prev=t,this.firstNode=t))},DoublyLinkedList.prototype.pop=function(){var t=this.lastNode;return null!=t&&this.remove(t),t},DoublyLinkedList.prototype.remove=function(t){this.firstNode==t?this.firstNode=t.next:null!=t.prev&&(t.prev.next=t.next),this.lastNode==t?this.lastNode=t.prev:null!=t.next&&(t.next.prev=t.prev)};