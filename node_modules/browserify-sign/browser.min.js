function Sign(t){stream.Writable.call(this);var e=algos[t];if(!e)throw new Error("Unknown message digest");this._hashType=e.hash,this._hash=createHash(e.hash),this._tag=e.id,this._signType=e.sign}function Verify(t){stream.Writable.call(this);var e=algos[t];if(!e)throw new Error("Unknown message digest");this._hash=createHash(e.hash),this._tag=e.id,this._signType=e.sign}function createSign(t){return new Sign(t)}function createVerify(t){return new Verify(t)}var _algos=require("./algos"),createHash=require("create-hash"),inherits=require("inherits"),sign=require("./sign"),stream=require("stream"),verify=require("./verify"),algos={};Object.keys(_algos).forEach(function(t){algos[t]=algos[t.toLowerCase()]=_algos[t]}),inherits(Sign,stream.Writable),Sign.prototype._write=function(t,e,n){this._hash.update(t),n()},Sign.prototype.update=function(t,e){return"string"==typeof t&&(t=new Buffer(t,e)),this._hash.update(t),this},Sign.prototype.sign=function(t,e){this.end();var n=this._hash.digest(),r=sign(Buffer.concat([this._tag,n]),t,this._hashType,this._signType);return e?r.toString(e):r},inherits(Verify,stream.Writable),Verify.prototype._write=function(t,e,n){this._hash.update(t),n()},Verify.prototype.update=function(t,e){return"string"==typeof t&&(t=new Buffer(t,e)),this._hash.update(t),this},Verify.prototype.verify=function(t,e,n){"string"==typeof e&&(e=new Buffer(e,n)),this.end();var r=this._hash.digest();return verify(e,Buffer.concat([this._tag,r]),t,this._signType)},module.exports={Sign:createSign,Verify:createVerify,createSign:createSign,createVerify:createVerify};