"use strict";function WrappedError(t){function n(n,r){assert(n,"an error is required"),assert(isError(n),"WrappedError: first argument must be an error");var i=n.message;i.indexOf("{causeMessage}")>=0&&(i=i.replace(causeMessageRegex,"$INVALID_CAUSE_MESSAGE_LITERAL")),i.indexOf("{origMessage}")>=0&&(i=i.replace(origMessageRegex,"$INVALID_ORIG_MESSAGE_LITERAL"));var o=!1,s=extend({},r,{causeMessage:i,origMessage:i});has(n,"code")&&!has(s,"code")&&(s.code=n.code),has(n,"errno")&&!has(s,"errno")&&(s.errno=n.errno,o=!0),has(n,"syscall")&&!has(s,"syscall")&&(s.syscall=n.syscall,o=!0);var a=n.type;a=!a&&o?"error.wrapped-io."+(n.syscall||"unknown")+"."+(n.errno||"unknown"):"error.wrapped-unknown",s.fullType=t.type+"~!~"+(n.fullType||n.type||a);var c=e(s);return Object.defineProperty(c,"cause",{value:n,configurable:!0,enumerable:!1}),c}assert(t,"WrappedError: must specify options"),assert(t.type,"WrappedError: must specify type"),assert(t.message,"WrappedError: must specify message"),assert(!has(t,"cause"),"WrappedError: cause field is reserved"),assert(!has(t,"fullType"),"WrappedError: fullType field is reserved"),assert(!has(t,"causeMessage"),"WrappedError: causeMessage field is reserved"),assert(!has(t,"origMessage"),"WrappedError: origMessage field is reserved");var e=TypedError(t);return extend(n,t),n._name=t.name,n}function has(t,e){return Object.prototype.hasOwnProperty.call(t,e)}function isError(t){return objectToString.call(t)===ERROR_TYPE}var extend=require("xtend/mutable"),assert=require("assert"),TypedError=require("./typed.js"),objectToString=Object.prototype.toString,ERROR_TYPE="[object Error]",causeMessageRegex=/\{causeMessage\}/g,origMessageRegex=/\{origMessage\}/g;module.exports=WrappedError;