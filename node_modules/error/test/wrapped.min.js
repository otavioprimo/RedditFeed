"use strict";var test=require("tape"),net=require("net"),WrappedError=require("../wrapped.js");test("can create a wrapped error",function(e){var t=WrappedError({message:"server: {causeMessage}",type:"server.listen-failed",requestedPort:null,host:null}),r=new Error("listen EADDRINUSE");r.code="EADDRINUSE";var n=t(r,{requestedPort:3426,host:"localhost"});e.equal(t.type,"server.listen-failed"),e.equal(n.message,"server: listen EADDRINUSE"),e.equal(n.requestedPort,3426),e.equal(n.host,"localhost"),e.equal(n.code,"EADDRINUSE"),e.equal(n.cause,r),e.equal(n.toString(),"ServerListenFailedError: server: listen EADDRINUSE"),e.equal(JSON.stringify(n),JSON.stringify({type:"server.listen-failed",message:"server: listen EADDRINUSE",requestedPort:3426,host:"localhost",name:"ServerListenFailedError",causeMessage:"listen EADDRINUSE",origMessage:"listen EADDRINUSE",code:"EADDRINUSE",fullType:"server.listen-failed~!~error.wrapped-unknown"})),e.end()}),test("can create wrapped error with syscall",function(e){var t=WrappedError({message:"tchannel socket error ({code} from {syscall}): {origMessage}",type:"syscall.error"}),r=new Error("listen EADDRINUSE");r.code="EADDRINUSE",r.syscall="listen";var n=t(r);e.equal(n.message,"tchannel socket error (EADDRINUSE from listen): listen EADDRINUSE"),e.equal(n.syscall,"listen"),e.equal(n.code,"EADDRINUSE"),e.equal(n.type,"syscall.error"),e.end()}),test("wrapping twice",function(e){var t=WrappedError({type:"my.read-error",message:"read: {causeMessage}"}),r=WrappedError({type:"my.database-error",message:"db: {causeMessage}"}),n=WrappedError({type:"my.business-error",message:"business: {causeMessage}"}),i=n(r(t(new Error("oops"))));e.ok(i),e.equal(i.message,"business: db: read: oops"),e.equal(i.type,"my.business-error"),e.equal(i.fullType,"my.business-error~!~my.database-error~!~my.read-error~!~error.wrapped-unknown"),e.end()}),test("handles bad recursive strings",function(e){var t=WrappedError({type:"wat.wat",message:"read: {causeMessage}"}),r=t(new Error("hi {causeMessage}"));e.ok(r),e.equal(r.message,"read: hi $INVALID_CAUSE_MESSAGE_LITERAL"),e.end()}),test("can wrap real IO errors",function(e){function n(){function a(n){var a=t(n,{host:"localhost",requestedPort:e});r.close(),i(a,n,e)}var e=r.address().port,n=net.createServer();n.on("error",a),n.listen(e)}function i(t,r,n){e.equal(t.message,"server: listen EADDRINUSE"),e.equal(t.requestedPort,n),e.equal(t.host,"localhost"),e.equal(t.code,"EADDRINUSE"),e.equal(t.cause,r),e.equal(t.toString(),"ServerListenFailedError: server: listen EADDRINUSE"),e.equal(JSON.stringify(t),JSON.stringify({type:"server.listen-failed",message:"server: listen EADDRINUSE",requestedPort:n,host:"localhost",name:"ServerListenFailedError",causeMessage:"listen EADDRINUSE",origMessage:"listen EADDRINUSE",code:"EADDRINUSE",errno:"EADDRINUSE",syscall:"listen",fullType:"server.listen-failed~!~error.wrapped-io.listen.EADDRINUSE"})),e.end()}var t=WrappedError({message:"server: {causeMessage}",type:"server.listen-failed",requestedPort:null,host:null}),r=net.createServer();r.once("listening",n),r.listen(0)});