function renderTemplate(e,t){return e.replace(/{{([a-zA-Z]+)}}/g,function(e,r){return t.hasOwnProperty(r)?t[r]:e})}function shallowCopy(e){if(!e)return e;var t={};return Object.keys(e).forEach(function(r){t[r]=e[r]}),t}function space(e){for(var t="",r=0;e>r;r++)t+=" ";return t}function makeIndent(e,t,r){return null===e||void 0===e?space(t):"number"==typeof e?space(e):"string"==typeof e?e:void assert.fail('invalid "'+r+'": not a string or number: '+e)}function textwrap(e,t){var r=e.trim().split(/\s+/),n=[],i="";return r.forEach(function(e){var r=i.length+e.length;i.length>0&&(r+=1),r>t&&(n.push(i),i=""),i.length>0&&(i+=" "),i+=e}),n.push(i),n}function optionKeyFromName(e){return e.replace(/-/g,"_")}function parseBool(e,t,r){return Boolean(r)}function parseString(e,t,r){return assert.string(r,"arg"),r}function parseNumber(e,t,r){assert.string(r,"arg");var n=Number(r);if(isNaN(n))throw new Error(format('arg for "%s" is not a number: "%s"',t,r));return n}function parseInteger(e,t,r){assert.string(r,"arg");var n=Number(r);if(!/^[0-9-]+$/.test(r)||isNaN(n))throw new Error(format('arg for "%s" is not an integer: "%s"',t,r));return n}function parsePositiveInteger(e,t,r){assert.string(r,"arg");var n=Number(r);if(!/^[0-9]+$/.test(r)||isNaN(n)||0===n)throw new Error(format('arg for "%s" is not a positive integer: "%s"',t,r));return n}function parseDate(e,t,r){assert.string(r,"arg");var n;if(/^\d+$/.test(r))n=new Date(1e3*Number(r));else{if(!/^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?Z?)?$/i.test(r))throw new Error(format('arg for "%s" is not a valid date format: "%s"',t,r));n=new Date(r)}if("Invalid Date"===n.toString())throw new Error(format('arg for "%s" is an invalid date: "%s"',t,r));return n}function Parser(e){assert.object(e,"config"),assert.arrayOfObject(e.options,"config.options"),assert.optionalBool(e.interspersed,"config.interspersed");var t=this;this.interspersed=void 0!==e.interspersed?e.interspersed:!0,this.allowUnknown=void 0!==e.allowUnknown?e.allowUnknown:!1,this.options=e.options.map(function(e){return shallowCopy(e)}),this.optionFromName={},this.optionFromEnv={};for(var r=0;r<this.options.length;r++){var n=this.options[r];if(void 0===n.group||null===n.group){assert.ok(optionTypes[n.type],format('invalid config.options.%d.type: "%s" in %j',r,n.type,n)),assert.optionalString(n.name,format("config.options.%d.name",r)),assert.optionalArrayOfString(n.names,format("config.options.%d.names",r)),assert.ok((n.name||n.names)&&!(n.name&&n.names),format('exactly one of "name" or "names" required: %j',n)),assert.optionalString(n.help,format("config.options.%d.help",r));var i=n.env||[];"string"==typeof i&&(i=[i]),assert.optionalArrayOfString(i,format("config.options.%d.env",r)),assert.optionalString(n.helpGroup,format("config.options.%d.helpGroup",r)),assert.optionalBool(n.helpWrap,format("config.options.%d.helpWrap",r)),assert.optionalBool(n.hidden,format("config.options.%d.hidden",r)),n.name?n.names=[n.name]:assert.string(n.names[0],format("config.options.%d.names is empty",r)),n.key=optionKeyFromName(n.names[0]),n.names.forEach(function(e){if(t.optionFromName[e])throw new Error(format('option name collision: "%s" used in %j and %j',e,t.optionFromName[e],n));t.optionFromName[e]=n}),i.forEach(function(e){if(t.optionFromEnv[e])throw new Error(format('option env collision: "%s" used in %j and %j',e,t.optionFromEnv[e],n));t.optionFromEnv[e]=n})}else assert.optionalString(n.group,format("config.options.%d.group",r))}}function bashCompletionSpecFromOptions(e){assert.object(e,"args"),assert.object(e.options,"args.options"),assert.optionalString(e.context,"args.context"),assert.optionalBool(e.includeHidden,"args.includeHidden"),assert.optionalArrayOfString(e.argtypes,"args.argtypes");var t=e.context||"",r=void 0===e.includeHidden?!1:e.includeHidden,n=[],i=[],a=[],o=[];return(e.options||[]).forEach(function(e){if(void 0===e.group||null===e.group){var t=e.names||[e.name],n=getOptionType(e.type);if(n.takesArg){var s=e.completionType||n.completionType||e.type;t.forEach(function(t){1===t.length?((r||!e.hidden)&&i.push("-"+t),o.push("-"+t+"="+s)):((r||!e.hidden)&&a.push("--"+t),o.push("--"+t+"="+s))})}else t.forEach(function(t){(r||!e.hidden)&&(1===t.length?i.push("-"+t):a.push("--"+t))})}}),n.push(format('local cmd%s_shortopts="%s"',t,i.sort().join(" "))),n.push(format('local cmd%s_longopts="%s"',t,a.sort().join(" "))),n.push(format('local cmd%s_optargs="%s"',t,o.sort().join(" "))),e.argtypes&&n.push(format('local cmd%s_argtypes="%s"',t,e.argtypes.join(" "))),n.join("\n")}function bashCompletionFromOptions(e){assert.object(e,"args"),assert.object(e.options,"args.options"),assert.string(e.name,"args.name"),assert.optionalString(e.specExtra,"args.specExtra"),assert.optionalArrayOfString(e.argtypes,"args.argtypes");var t={name:e.name,date:new Date,spec:bashCompletionSpecFromOptions({options:e.options,argtypes:e.argtypes})};e.specExtra&&(t.spec+="\n\n"+e.specExtra);var r=fs.readFileSync(BASH_COMPLETION_TEMPLATE_PATH,"utf8");return renderTemplate(r,t)}function createParser(e){return new Parser(e)}function parse(e){assert.object(e,"config"),assert.optionalArrayOfString(e.argv,"config.argv"),assert.optionalObject(e.env,"config.env");var e=shallowCopy(e),t=e.argv;delete e.argv;var r=e.env;delete e.env;var n=new Parser(e);return n.parse({argv:t,env:r})}function addOptionType(e){assert.object(e,"optionType"),assert.string(e.name,"optionType.name"),assert.bool(e.takesArg,"optionType.takesArg"),e.takesArg&&assert.string(e.helpArg,"optionType.helpArg"),assert.func(e.parseArg,"optionType.parseArg"),assert.optionalBool(e.array,"optionType.array"),assert.optionalBool(e.arrayFlatten,"optionType.arrayFlatten"),optionTypes[e.name]={takesArg:e.takesArg,helpArg:e.helpArg,parseArg:e.parseArg,array:e.array,arrayFlatten:e.arrayFlatten,"default":e["default"]}}function getOptionType(e){return assert.string(e,"name"),optionTypes[e]}function synopsisFromOpt(e){if(assert.object(e,"o"),e.hasOwnProperty("group"))return null;var t=e.names||[e.name],r=getOptionType(e.type),n=e.helpArg||r&&r.helpArg||"ARG",i=[];return t.forEach(function(e){var t=(1===e.length?"-":"--")+e;r&&r.takesArg&&(t+=1===e.length?" "+n:"="+n),i.push(t)}),"[ "+i.join(" | ")+" ]"}var assert=require("assert-plus"),format=require("util").format,fs=require("fs"),path=require("path"),DEBUG=!0;if(DEBUG)var debug=console.warn;else var debug=function(){};var optionTypes={bool:{takesArg:!1,parseArg:parseBool},string:{takesArg:!0,helpArg:"ARG",parseArg:parseString},number:{takesArg:!0,helpArg:"NUM",parseArg:parseNumber},integer:{takesArg:!0,helpArg:"INT",parseArg:parseInteger},positiveInteger:{takesArg:!0,helpArg:"INT",parseArg:parsePositiveInteger},date:{takesArg:!0,helpArg:"DATE",parseArg:parseDate},arrayOfBool:{takesArg:!1,array:!0,parseArg:parseBool},arrayOfString:{takesArg:!0,helpArg:"ARG",array:!0,parseArg:parseString},arrayOfNumber:{takesArg:!0,helpArg:"NUM",array:!0,parseArg:parseNumber},arrayOfInteger:{takesArg:!0,helpArg:"INT",array:!0,parseArg:parseInteger},arrayOfPositiveInteger:{takesArg:!0,helpArg:"INT",array:!0,parseArg:parsePositiveInteger},arrayOfDate:{takesArg:!0,helpArg:"INT",array:!0,parseArg:parseDate}};Parser.prototype.optionTakesArg=function(e){return optionTypes[e.type].takesArg},Parser.prototype.parse=function(e){function u(e,t,r,n,i){var a=optionTypes[e.type],u=a.parseArg(e,t,n);if(a.array)if(o[r]||(o[r]=[]),a.arrayFlatten&&Array.isArray(u))for(var l=0;l<u.length;l++)o[r].push(u[l]);else o[r].push(u);else o[r]=u;var c={key:r,value:u,from:i};s.push(c)}var t=this;Array.isArray(arguments[0])&&(e={argv:arguments[0],slice:arguments[1]}),assert.optionalObject(e,"inputs"),e||(e={}),assert.optionalArrayOfString(e.argv,"inputs.argv");var r=e.argv||process.argv,n=void 0!==e.slice?e.slice:2,i=r.slice(n),a=e.env||process.env,o={},s=[],l=[],c=0;e:for(;c<i.length;){var f=i[c];if("--"===f){c++;break}if("--"===f.slice(0,2)){var p=f.slice(2),h=null,d=p.indexOf("=");-1!==d&&(h=p.slice(d+1),p=p.slice(0,d));var v=this.optionFromName[p];if(v){var m=this.optionTakesArg(v);if(null!==h&&!m)throw new Error(format('argument given to "--%s" option that does not take one: "%s"',p,f));if(m)if(null!==h)u(v,"--"+p,v.key,h,"argv");else{if(c+1>=i.length)throw new Error(format('do not have enough args for "--%s" option',p));u(v,"--"+p,v.key,i[c+1],"argv"),c++}else u(v,"--"+p,v.key,!0,"argv")}else{if(!this.allowUnknown)throw new Error(format('unknown option: "--%s"',p));if(!this.interspersed)break e;l.push(f)}}else if("-"===f[0]&&f.length>1){for(var g=1,y=!0;g<f.length;){var p=f[g],v=this.optionFromName[p];if(!v){if(y=!1,this.allowUnknown){if(this.interspersed){l.push(f);break}break e}throw f.length>2?new Error(format('unknown option: "-%s" in "%s" group',p,f)):new Error(format('unknown option: "-%s"',p))}if(this.optionTakesArg(v))break;g++}for(g=1;y&&g<f.length;){var p=f[g],h=f.slice(g+1),v=this.optionFromName[p],m=this.optionTakesArg(v);if(m){if(h){u(v,"-"+p,v.key,h,"argv");break}if(c+1>=i.length)throw new Error(format('do not have enough args for "-%s" option',p));u(v,"-"+p,v.key,i[c+1],"argv"),c++;break}u(v,"-"+p,v.key,!0,"argv"),g++}}else{if(!this.interspersed)break e;l.push(f)}c++}return l=l.concat(i.slice(c)),Object.keys(this.optionFromEnv).forEach(function(e){var r=a[e];if(void 0!==r){var n=t.optionFromEnv[e];if(void 0===o[n.key]){var i=t.optionTakesArg(n);i?u(n,e,n.key,r,"env"):""!==r&&u(n,e,n.key,"0"!==r,"env")}}}),this.options.forEach(function(e){void 0===o[e.key]&&(void 0!==e["default"]?o[e.key]=e["default"]:e.type&&void 0!==optionTypes[e.type]["default"]&&(o[e.key]=optionTypes[e.type]["default"]))}),o._order=s,o._args=l,o},Parser.prototype.help=function(e){e=e||{},assert.object(e,"config");var t=makeIndent(e.indent,4,"config.indent"),r=makeIndent(e.headingIndent,Math.round(t.length/2),"config.headingIndent");assert.optionalString(e.nameSort,"config.nameSort");var n=e.nameSort||"length";assert.ok(~["length","none"].indexOf(n),'invalid "config.nameSort"'),assert.optionalNumber(e.maxCol,"config.maxCol"),assert.optionalNumber(e.maxHelpCol,"config.maxHelpCol"),assert.optionalNumber(e.minHelpCol,"config.minHelpCol"),assert.optionalNumber(e.helpCol,"config.helpCol"),assert.optionalBool(e.includeEnv,"config.includeEnv"),assert.optionalBool(e.includeDefault,"config.includeDefault"),assert.optionalBool(e.helpWrap,"config.helpWrap");var i=e.maxCol||80,a=e.minHelpCol||20,o=e.maxHelpCol||40,s=[],u=0;this.options.forEach(function(e){if(!e.hidden){if(void 0!==e.group&&null!==e.group)return void s.push(null);var t=optionTypes[e.type],r=e.helpArg||t.helpArg||"ARG",i="",a=e.names.slice();"length"===n&&a.sort(function(e,t){return e.length<t.length?-1:t.length<e.length?1:0}),a.forEach(function(e,n){n>0&&(i+=", "),1===e.length?(i+="-"+e,t.takesArg&&(i+=" "+r)):(i+="--"+e,t.takesArg&&(i+="="+r))}),u=Math.max(u,i.length),s.push(i)}});var l=e.helpCol;l||(l=u+t.length+2,l=Math.min(Math.max(l,a),o));var c=-1;this.options.forEach(function(n){if(!n.hidden){if(c++,void 0!==n.group&&null!==n.group)return void(""===n.group?s[c]="":s[c]=(0===c?"":"\n")+r+n.group+":");var a;e.includeDefault&&(void 0!==n["default"]?a=format("Default: %j",n["default"]):n.type&&void 0!==optionTypes[n.type]["default"]&&(a=format("Default: %j",optionTypes[n.type]["default"])));var o=s[c]=t+s[c];if(n.help||e.includeEnv&&n.env||a){var u=l-o.length;o+=u>=0?space(u):"\n"+space(l);var f="";if(n.env&&n.env.length&&e.includeEnv){f+="Environment: ";var p=optionTypes[n.type],h=n.helpArg||p.helpArg||"ARG",d=(Array.isArray(n.env)?n.env:[n.env]).map(function(e){return p.takesArg?e+"="+h:e+"=1"});f+=d.join(", ")}var v=(n.help||"").trim();if(n.helpWrap!==!1&&e.helpWrap!==!1)v.length&&!~".!?\"'".indexOf(v.slice(-1))&&(v+="."),v.length&&(v+=" "),v+=f,a&&(f&&(v+=". "),v+=a),o+=textwrap(v,i-l).join("\n"+space(l));else{var m=v.split("\n").filter(function(e){return e.length});""!==f&&m.push(f),a&&m.push(a),o+=m.join("\n"+space(l))}s[c]=o}}});var f="";return s.length>0&&(f=s.join("\n")+"\n"),f},Parser.prototype.bashCompletion=function(e){return assert.object(e,"args"),assert.string(e.name,"args.name"),assert.optionalString(e.specExtra,"args.specExtra"),assert.optionalArrayOfString(e.argtypes,"args.argtypes"),bashCompletionFromOptions({name:e.name,specExtra:e.specExtra,argtypes:e.argtypes,options:this.options})};const BASH_COMPLETION_TEMPLATE_PATH=path.join(__dirname,"../etc/dashdash.bash_completion.in");module.exports={createParser:createParser,Parser:Parser,parse:parse,addOptionType:addOptionType,getOptionType:getOptionType,synopsisFromOpt:synopsisFromOpt,BASH_COMPLETION_TEMPLATE_PATH:BASH_COMPLETION_TEMPLATE_PATH,bashCompletionFromOptions:bashCompletionFromOptions,bashCompletionSpecFromOptions:bashCompletionSpecFromOptions,parseBool:parseBool,parseString:parseString,parseNumber:parseNumber,parseInteger:parseInteger,parsePositiveInteger:parsePositiveInteger,parseDate:parseDate};